{"version":3,"sources":["../node_modules/classnames/index.js","components/Cards/InfoCard.js","components/RoundIcon.js","pages/Dashboard/Dashboard.js","components/Typography/PageTitle.js","components/Chart/ChartCard.js","components/Chart/ChartLegend.js","utils/demo/chartsData.js","utils/demo/ordersData.js","components/OrdersTable.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","InfoCard","title","value","icon","children","className","RoundIcon","Icon","iconColorClass","bgColorClass","cls","Dashboard","PageTitle","PeopleIcon","MoneyIcon","CartIcon","ChatIcon","ChartCard","lineOptions","ChartLegend","legends","lineLegends","doughnutOptions","doughnutLegends","OrdersTable","resultsPerPage","Chart","map","legend","color","realTimeUsersBarLegends","data","datasets","backgroundColor","label","labels","options","responsive","cutoutPercentage","display","borderColor","fill","tooltips","mode","intersect","hover","scales","x","scaleLabel","labelString","y","realTimeUsersBarOptions","borderWidth","avatar","name","amount","status","date","filter","path","useState","page","setPage","setData","totalResults","response","useEffect","order","slice","user","src","alt","type","Date","toLocaleDateString","to","EyeIcon","aria-label","onChange","p"],"mappings":"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","file":"static/js/10.72651fc7.chunk.js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from 'react'\r\nimport { Card, CardBody } from '@windmill/react-ui'\r\n\r\nfunction InfoCard({ title, value, children: icon }) {\r\n  return (\r\n    <Card>\r\n      <CardBody className=\"flex items-center\">\r\n        {icon}\r\n        <div>\r\n          <p className=\"mb-2 text-sm font-medium text-gray-600 dark:text-gray-400\">{title}</p>\r\n          <p className=\"text-lg font-semibold text-gray-700 dark:text-gray-200\">{value}</p>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default InfoCard\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nfunction RoundIcon({\r\n  icon: Icon,\r\n  iconColorClass = \"text-orange-600 dark:text-orange-100\",\r\n  bgColorClass = \"bg-orange-100 dark:bg-orange-600\",\r\n  className,\r\n}) {\r\n  const baseStyle = \"p-3 rounded-full\";\r\n\r\n  const cls = classNames(baseStyle, iconColorClass, bgColorClass, className);\r\n  return (\r\n    <div className={cls}>\r\n      <Icon className=\"w-5 h-5\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoundIcon;\r\n","import React from \"react\";\r\n\r\nimport InfoCard from \"../../components/Cards/InfoCard\";\r\nimport ChartCard from \"../../components/Chart/ChartCard\";\r\nimport { Doughnut, Line } from \"react-chartjs-2\";\r\nimport ChartLegend from \"../../components/Chart/ChartLegend\";\r\nimport PageTitle from \"../../components/Typography/PageTitle\";\r\nimport { ChatIcon, CartIcon, MoneyIcon, PeopleIcon } from \"../../icons\";\r\nimport RoundIcon from \"../../components/RoundIcon\";\r\n\r\nimport {\r\n  doughnutOptions,\r\n  lineOptions,\r\n  doughnutLegends,\r\n  lineLegends,\r\n} from \"../../utils/demo/chartsData\";\r\nimport OrdersTable from \"../../components/OrdersTable\";\r\n\r\nfunction Dashboard() {\r\n  return (\r\n    <>\r\n      <PageTitle>Kênh người bán</PageTitle>\r\n\r\n      {/* <CTA /> */}\r\n\r\n      {/* <!-- Cards --> */}\r\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2 xl:grid-cols-4\">\r\n        <InfoCard title=\"Tổng số khách hàng\" value=\"765\">\r\n          <RoundIcon\r\n            icon={PeopleIcon}\r\n            iconColorClass=\"text-orange-500 dark:text-orange-100\"\r\n            bgColorClass=\"bg-orange-100 dark:bg-orange-500\"\r\n            className=\"mr-4\"\r\n          />\r\n        </InfoCard>\r\n\r\n        <InfoCard title=\"Tổng doanh thu\" value=\"$ 6,760.89\">\r\n          <RoundIcon\r\n            icon={MoneyIcon}\r\n            iconColorClass=\"text-green-500 dark:text-green-100\"\r\n            bgColorClass=\"bg-green-100 dark:bg-green-500\"\r\n            className=\"mr-4\"\r\n          />\r\n        </InfoCard>\r\n\r\n        <InfoCard title=\"Đơn hàng mới\" value=\"150\">\r\n          <RoundIcon\r\n            icon={CartIcon}\r\n            iconColorClass=\"text-blue-500 dark:text-blue-100\"\r\n            bgColorClass=\"bg-blue-100 dark:bg-blue-500\"\r\n            className=\"mr-4\"\r\n          />\r\n        </InfoCard>\r\n\r\n        <InfoCard title=\"Unread Chats\" value=\"15\">\r\n          <RoundIcon\r\n            icon={ChatIcon}\r\n            iconColorClass=\"text-teal-500 dark:text-teal-100\"\r\n            bgColorClass=\"bg-teal-100 dark:bg-teal-500\"\r\n            className=\"mr-4\"\r\n          />\r\n        </InfoCard>\r\n      </div>\r\n\r\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2\">\r\n        <ChartCard title=\"User Analytics\">\r\n          <Line {...lineOptions} />\r\n          <ChartLegend legends={lineLegends} />\r\n        </ChartCard>\r\n\r\n        <ChartCard title=\"Revenue\">\r\n          <Doughnut {...doughnutOptions} />\r\n          <ChartLegend legends={doughnutLegends} />\r\n        </ChartCard>\r\n      </div>\r\n\r\n      <PageTitle>Đơn hàng</PageTitle>\r\n      <OrdersTable resultsPerPage={10} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-4 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n","import React from 'react'\r\n\r\nfunction Chart({ children, title }) {\r\n  return (\r\n    <div className=\"min-w-0 p-4 bg-white rounded-lg shadow-xs dark:bg-gray-800\">\r\n      <p className=\"mb-4 font-semibold text-gray-800 dark:text-gray-300\">{title}</p>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chart\r\n","import React from 'react'\r\n\r\nfunction ChartLegend({ legends }) {\r\n  return (\r\n    <div className=\"flex justify-center mt-4 space-x-3 text-sm text-gray-600 dark:text-gray-400\">\r\n      {legends.map((legend) => (\r\n        <div className=\"flex items-center\" key={legend.title}>\r\n          <span className={`inline-block w-3 h-3 mr-1 ${legend.color} rounded-full`}></span>\r\n          <span>{legend.title}</span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChartLegend\r\n","export const doughnutLegends = [\r\n  { title: \"Shirts\", color: \"bg-blue-500\" },\r\n  { title: \"Shoes\", color: \"bg-teal-600\" },\r\n  { title: \"Bags\", color: \"bg-orange-600\" },\r\n];\r\n\r\nexport const lineLegends = [\r\n  { title: \"Organic\", color: \"bg-teal-600\" },\r\n  { title: \"Paid\", color: \"bg-orange-600\" },\r\n];\r\n\r\nexport const barLegends = [\r\n  { title: \"Shoes\", color: \"bg-teal-600\" },\r\n  { title: \"Bags\", color: \"bg-orange-600\" },\r\n];\r\nexport const realTimeUsersBarLegends = [\r\n  { title: \"Active Users\", color: \"bg-teal-600\" },\r\n];\r\n\r\nexport const doughnutOptions = {\r\n  data: {\r\n    datasets: [\r\n      {\r\n        data: [33, 33, 33],\r\n        /**\r\n         * These colors come from Tailwind CSS palette\r\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\r\n         */\r\n        backgroundColor: [\"#0694a2\", \"#1c64f2\", \"#7e3af2\"],\r\n        label: \"Dataset 1\",\r\n      },\r\n    ],\r\n    labels: [\"Shoes\", \"Shirts\", \"Bags\"],\r\n  },\r\n  options: {\r\n    responsive: true,\r\n    cutoutPercentage: 80,\r\n  },\r\n  legend: {\r\n    display: false,\r\n  },\r\n};\r\n\r\nexport const lineOptions = {\r\n  data: {\r\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n    datasets: [\r\n      {\r\n        label: \"Organic\",\r\n        /**\r\n         * These colors come from Tailwind CSS palette\r\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\r\n         */\r\n        backgroundColor: \"#0694a2\",\r\n        borderColor: \"#0694a2\",\r\n        data: [43, 48, 40, 54, 67, 73, 70],\r\n        fill: false,\r\n      },\r\n      {\r\n        label: \"Paid\",\r\n        fill: false,\r\n        /**\r\n         * These colors come from Tailwind CSS palette\r\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\r\n         */\r\n        backgroundColor: \"#7e3af2\",\r\n        borderColor: \"#7e3af2\",\r\n        data: [24, 50, 64, 74, 52, 51, 65],\r\n      },\r\n    ],\r\n  },\r\n  options: {\r\n    responsive: true,\r\n    tooltips: {\r\n      mode: \"index\",\r\n      intersect: false,\r\n    },\r\n    hover: {\r\n      mode: \"nearest\",\r\n      intersect: true,\r\n    },\r\n    scales: {\r\n      x: {\r\n        display: true,\r\n        scaleLabel: {\r\n          display: true,\r\n          labelString: \"Month\",\r\n        },\r\n      },\r\n      y: {\r\n        display: true,\r\n        scaleLabel: {\r\n          display: true,\r\n          labelString: \"Value\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n  legend: {\r\n    display: false,\r\n  },\r\n};\r\n\r\nexport const barOptions = {\r\n  data: {\r\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n    datasets: [\r\n      {\r\n        label: \"Shoes\",\r\n        backgroundColor: \"#0694a2\",\r\n        // borderColor: window.chartColors.red,\r\n        borderWidth: 1,\r\n        data: [-3, 14, 52, 74, 33, 90, 70],\r\n      },\r\n      {\r\n        label: \"Bags\",\r\n        backgroundColor: \"#7e3af2\",\r\n        // borderColor: window.chartColors.blue,\r\n        borderWidth: 1,\r\n        data: [66, 33, 43, 12, 54, 62, 84],\r\n      },\r\n    ],\r\n  },\r\n  options: {\r\n    responsive: true,\r\n  },\r\n  legend: {\r\n    display: false,\r\n  },\r\n};\r\n\r\nexport const realTimeUsersBarOptions = {\r\n  data: {\r\n    labels: [\r\n      \"6.00\",\r\n      \"6.10\",\r\n      \"6.20\",\r\n      \"6.30\",\r\n      \"6.40\",\r\n      \"6.50\",\r\n      \"7.00\",\r\n      \"7.10\",\r\n      \"7.20\",\r\n      \"7.30\",\r\n      \"7.40\",\r\n      \"7.50\",\r\n      \"Now\",\r\n    ],\r\n    datasets: [\r\n      {\r\n        label: \"Active Users\",\r\n        backgroundColor: \"#0694a2\",\r\n        // borderColor: window.chartColors.red,\r\n        borderWidth: 1,\r\n        data: [2, 14, 52, 74, 33, 90, 70, 34, 56, 62, 11, 23, 55],\r\n      },\r\n    ],\r\n  },\r\n  options: {\r\n    responsive: true,\r\n  },\r\n  legend: {\r\n    display: false,\r\n  },\r\n};\r\n","export default [\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Chandler Jacobi\",\r\n    amount: 989.4,\r\n    status: \"Completed\",\r\n    date: \"Mon Feb 03 2020 04:13:15 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Monserrat Marquardt\",\r\n    amount: 471.44,\r\n    status: \"Un-paid\",\r\n    date: \"Fri Nov 29 2019 10:43:17 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Lonie Wyman\",\r\n    amount: 934.24,\r\n    status: \"Paid\",\r\n    date: \"Fri Apr 03 2020 03:07:53 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Corine Abernathy\",\r\n    amount: 351.28,\r\n    status: \"Paid\",\r\n    date: \"Fri Jun 21 2019 20:21:55 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Lorenz Botsford\",\r\n    amount: 355.3,\r\n    status: \"Completed\",\r\n    date: \"Wed Aug 28 2019 15:31:43 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Everette Botsford\",\r\n    amount: 525.42,\r\n    status: \"Paid\",\r\n    date: \"Thu Jan 16 2020 09:53:33 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Marilou Beahan\",\r\n    amount: 414.99,\r\n    status: \"Paid\",\r\n    date: \"Mon Oct 28 2019 14:44:31 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Ceasar Sauer\",\r\n    amount: 488.0,\r\n    status: \"Completed\",\r\n    date: \"Tue Jul 23 2019 00:24:44 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Rae McDermott\",\r\n    amount: 502.69,\r\n    status: \"Un-paid\",\r\n    date: \"Sat Feb 01 2020 12:57:03 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Mable Steuber\",\r\n    amount: 911.09,\r\n    status: \"Un-paid\",\r\n    date: \"Mon Sep 09 2019 12:03:25 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Julian Glover\",\r\n    amount: 656.94,\r\n    status: \"Un-paid\",\r\n    date: \"Fri May 22 2020 17:46:12 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Duncan Toy\",\r\n    amount: 120.78,\r\n    status: \"Un-paid\",\r\n    date: \"Sun Nov 17 2019 11:59:50 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Blanche Friesen\",\r\n    amount: 676.95,\r\n    status: \"Un-paid\",\r\n    date: \"Sun Jun 21 2020 16:46:39 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Orion Koepp\",\r\n    amount: 447.56,\r\n    status: \"Un-paid\",\r\n    date: \"Thu Jun 04 2020 18:29:41 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Dakota Vandervort\",\r\n    amount: 765.22,\r\n    status: \"Un-paid\",\r\n    date: \"Fri Jan 31 2020 13:02:55 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Lily Collier\",\r\n    amount: 449.11,\r\n    status: \"Un-paid\",\r\n    date: \"Sun Aug 18 2019 14:52:01 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Kayleigh Schumm\",\r\n    amount: 65.54,\r\n    status: \"Un-paid\",\r\n    date: \"Wed May 06 2020 17:49:09 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"General McGlynn\",\r\n    amount: 30.51,\r\n    status: \"Un-paid\",\r\n    date: \"Mon Mar 30 2020 01:24:54 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Shayna Schumm\",\r\n    amount: 313.73,\r\n    status: \"Un-paid\",\r\n    date: \"Wed Jul 03 2019 10:01:06 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Giovanna Sanford\",\r\n    amount: 398.3,\r\n    status: \"Un-paid\",\r\n    date: \"Tue Oct 08 2019 17:08:43 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Emie Mante\",\r\n    amount: 142.51,\r\n    status: \"Un-paid\",\r\n    date: \"Wed Jul 24 2019 19:17:16 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Chance Muller\",\r\n    amount: 963.26,\r\n    status: \"Un-paid\",\r\n    date: \"Sun Dec 01 2019 14:04:10 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Armani Torphy\",\r\n    amount: 445.23,\r\n    status: \"Un-paid\",\r\n    date: \"Tue Dec 24 2019 13:28:36 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Braeden Ward\",\r\n    amount: 588.53,\r\n    status: \"Un-paid\",\r\n    date: \"Wed Apr 15 2020 21:40:11 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Malcolm Price\",\r\n    amount: 181.93,\r\n    status: \"Un-paid\",\r\n    date: \"Thu Oct 24 2019 07:09:03 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Susan Jast\",\r\n    amount: 928.41,\r\n    status: \"Un-paid\",\r\n    date: \"Sun Feb 09 2020 23:22:23 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Torrey Reynolds\",\r\n    amount: 447.37,\r\n    status: \"Un-paid\",\r\n    date: \"Mon Oct 28 2019 04:10:39 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Travon Harber\",\r\n    amount: 422.48,\r\n    status: \"Un-paid\",\r\n    date: \"Sat Nov 09 2019 05:04:09 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Hattie Gutkowski\",\r\n    amount: 714.34,\r\n    status: \"Un-paid\",\r\n    date: \"Tue Oct 22 2019 22:36:23 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Demarco Lang\",\r\n    amount: 536.92,\r\n    status: \"Un-paid\",\r\n    date: \"Wed Apr 08 2020 03:05:59 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Glennie Ziemann\",\r\n    amount: 597.25,\r\n    status: \"Un-paid\",\r\n    date: \"Mon Jun 22 2020 21:27:06 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Alta Howe\",\r\n    amount: 42.28,\r\n    status: \"Un-paid\",\r\n    date: \"Sat Oct 12 2019 22:57:22 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Sydnee Gottlieb\",\r\n    amount: 868.92,\r\n    status: \"Un-paid\",\r\n    date: \"Wed Feb 05 2020 05:17:34 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Arlene Schmitt\",\r\n    amount: 364.68,\r\n    status: \"Un-paid\",\r\n    date: \"Thu Oct 03 2019 08:47:32 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Hilda Schoen\",\r\n    amount: 260.91,\r\n    status: \"Un-paid\",\r\n    date: \"Wed Dec 04 2019 06:28:30 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Chase Bahringer\",\r\n    amount: 454.61,\r\n    status: \"Un-paid\",\r\n    date: \"Mon Nov 25 2019 16:59:38 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Lucile Hansen\",\r\n    amount: 982.22,\r\n    status: \"Un-paid\",\r\n    date: \"Sun Aug 25 2019 17:15:59 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Mollie Heaney\",\r\n    amount: 390.33,\r\n    status: \"Un-paid\",\r\n    date: \"Mon Jul 22 2019 01:45:19 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Bennie Kuvalis\",\r\n    amount: 456.64,\r\n    status: \"Un-paid\",\r\n    date: \"Sat Feb 08 2020 07:55:08 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Jodie Luettgen\",\r\n    amount: 398.37,\r\n    status: \"Un-paid\",\r\n    date: \"Tue Jun 09 2020 11:19:53 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Bethel Quitzon\",\r\n    amount: 183.58,\r\n    status: \"Un-paid\",\r\n    date: \"Sun Dec 29 2019 18:56:54 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Jon Dietrich\",\r\n    amount: 439.01,\r\n    status: \"Un-paid\",\r\n    date: \"Sun Dec 29 2019 11:11:34 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Nakia Kihn\",\r\n    amount: 824.12,\r\n    status: \"Un-paid\",\r\n    date: \"Sun Sep 15 2019 06:43:56 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Assunta Grady\",\r\n    amount: 172.97,\r\n    status: \"Un-paid\",\r\n    date: \"Tue Dec 17 2019 01:46:37 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n  {\r\n    avatar: \"https://i.pravatar.cc/300\",\r\n    name: \"Lukas Klocko\",\r\n    amount: 515.74,\r\n    status: \"Un-paid\",\r\n    date: \"Mon Jun 15 2020 04:04:32 GMT-0300 (Brasilia Standard Time)\",\r\n  },\r\n];\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    TableBody,\r\n    TableContainer,\r\n    Table,\r\n    TableHeader,\r\n    TableCell,\r\n    TableRow,\r\n    TableFooter,\r\n    Button,\r\n    Avatar,\r\n    Badge,\r\n    Pagination,\r\n} from '@windmill/react-ui';\r\nimport response from '../utils/demo/ordersData';\r\nimport { EyeIcon } from '../icons';\r\nimport ordersData from '../utils/demo/ordersData';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nconst OrdersTable = ({ resultsPerPage, filter, path }) => {\r\n    const [page, setPage] = useState(1);\r\n    const [data, setData] = useState([]);\r\n    // pagination setup\r\n    const totalResults = response.length;\r\n\r\n    // pagination change control\r\n    function onPageChange(p) {\r\n        setPage(p);\r\n    }\r\n\r\n    // on page change, load new sliced data\r\n    // here you would make another server request for new data\r\n    useEffect(() => {\r\n        // If Filters Applied\r\n        if (filter === 'paid') {\r\n            setData(response.filter((order) => order.status === 'Paid').slice((page - 1) * resultsPerPage, page * resultsPerPage));\r\n        }\r\n        if (filter === 'un-paid') {\r\n            setData(response.filter((order) => order.status === 'Un-paid').slice((page - 1) * resultsPerPage, page * resultsPerPage));\r\n        }\r\n        if (filter === 'completed') {\r\n            setData(response.filter((order) => order.status === 'Completed').slice((page - 1) * resultsPerPage, page * resultsPerPage));\r\n        }\r\n\r\n        // if filters dosent applied\r\n        if (filter === 'all' || !filter) {\r\n            setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\r\n        }\r\n    }, [page, resultsPerPage, filter]);\r\n\r\n    return (\r\n        <div>\r\n            {/* Table */}\r\n            <TableContainer className=\"mb-8\">\r\n                <Table>\r\n                    <TableHeader>\r\n                        <tr>\r\n                            <TableCell>Client</TableCell>\r\n                            <TableCell>Order ID</TableCell>\r\n                            <TableCell>Amount</TableCell>\r\n                            <TableCell>Status</TableCell>\r\n                            <TableCell>Date</TableCell>\r\n                            <TableCell>Action</TableCell>\r\n                        </tr>\r\n                    </TableHeader>\r\n                    <TableBody>\r\n                        {data.map((user, i) => (\r\n                            <TableRow key={i}>\r\n                                <TableCell>\r\n                                    <div className=\"flex items-center text-sm\">\r\n                                        <Avatar className=\"hidden mr-3 md:block\" src={user.avatar} alt=\"User image\" />\r\n                                        <div>\r\n                                            <p className=\"font-semibold\">{user.name}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <span className=\"text-sm\">#000{i}</span>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <span className=\"text-sm\">$ {user.amount}</span>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Badge\r\n                                        type={\r\n                                            user.status === 'Un-paid'\r\n                                                ? 'danger'\r\n                                                : user.status === 'Paid'\r\n                                                ? 'success'\r\n                                                : user.status === 'Completed'\r\n                                                ? 'warning'\r\n                                                : 'neutral'\r\n                                        }\r\n                                    >\r\n                                        {user.status}\r\n                                    </Badge>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <span className=\"text-sm\">{new Date(user.date).toLocaleDateString()}</span>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <div className=\"flex\">\r\n                                        <Link to={`/${path}/${i}`}>\r\n                                            <Button icon={EyeIcon} className=\"mr-3\" aria-label=\"Preview\" />\r\n                                        </Link>\r\n                                    </div>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n                <TableFooter>\r\n                    <Pagination\r\n                        totalResults={totalResults}\r\n                        resultsPerPage={resultsPerPage}\r\n                        label=\"Table navigation\"\r\n                        onChange={onPageChange}\r\n                    />\r\n                </TableFooter>\r\n            </TableContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrdersTable;\r\n"],"sourceRoot":""}