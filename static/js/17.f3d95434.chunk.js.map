{"version":3,"sources":["pages/Product/AddProduct.js","components/Typography/PageTitle.js","components/Icon.js","services/apiService.js"],"names":["FormTitle","children","className","AddProduct","useState","isModalOpen","setIsModalOpen","openModal","productId","a","closeModal","categoriesResult","setCategoriesResult","useEffect","apiService","result","fetchApi","categories2","setCategories2","fetchApi2","id","data","setSelected","setCategories3","fetchApi3","selected","images","setImages","imageURLS","setImageURLs","length","newImageUrls","forEach","image","push","URL","createObjectURL","isValidFileUploaded","file","fileExtension","type","split","includes","inputFile","useRef","setErrorResponse","AddProductForm","useFormik","initialValues","email","password","validationSchema","Yup","required","matches","onSubmit","values","aria-hidden","icon","HomeIcon","exact","to","isOpen","onClose","style","width","map","i","key","onClick","name","RightArrow","block","size","layout","handleSubmit","imageSrc","src","alt","current","click","multiple","onChange","e","check","files","target","concat","console","log","alert","ref","viewBox","xmlns","d","placeholder","value","readOnly","rows","iconLeft","AddIcon","PageTitle","Icon","props","getAllItem","httpRequest","res","detailProduct","allCategories","categoriesById"],"mappings":"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","file":"static/js/17.f3d95434.chunk.js","sourcesContent":["import React from 'react';\r\nimport PageTitle from '../../components/Typography/PageTitle';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Icon from '../../components/Icon';\r\nimport { HomeIcon, AddIcon, PublishIcon, TrashIcon, RightArrow, StoreIcon } from '../../icons';\r\nimport { Card, CardBody, Label, Input, Textarea, Button, Select, Modal, ModalHeader, ModalBody, ModalFooter } from '@windmill/react-ui';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport * as apiService from '../../services/apiService';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst FormTitle = ({ children }) => {\r\n    return <h2 className=\"mb-3 text-sm font-semibold text-gray-600 dark:text-gray-300\">{children}</h2>;\r\n};\r\n\r\nconst AddProduct = () => {\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [selectedDeleteProduct, setSelectedDeleteProduct] = useState(null);\r\n    async function openModal(productId) {\r\n        // let product = await data.filter((product) => product.id === productId)[0];\r\n        // console.log(product);\r\n        // setSelectedDeleteProduct(product);\r\n        setIsModalOpen(true);\r\n    }\r\n\r\n    function closeModal() {\r\n        setIsModalOpen(false);\r\n    }\r\n    const [categoriesResult, setCategoriesResult] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            const result = await apiService.allCategories();\r\n\r\n            setCategoriesResult(result);\r\n        };\r\n\r\n        fetchApi();\r\n    }, []);\r\n\r\n    const [categories2, setCategories2] = useState([]);\r\n\r\n    const fetchApi2 = async (result) => {\r\n        const data = await apiService.categoriesById(result.id);\r\n        setSelected(result);\r\n        setCategories2(data);\r\n    };\r\n    const [categories3, setCategories3] = useState([]);\r\n\r\n    const fetchApi3 = async (result) => {\r\n        const data = await apiService.categoriesById(result.id);\r\n        setSelected(result);\r\n        setCategories3(data);\r\n    };\r\n    const [selected, setSelected] = useState();\r\n\r\n    const [images, setImages] = useState([]);\r\n    const [imageURLS, setImageURLs] = useState([]);\r\n    useEffect(() => {\r\n        if (images.length < 1) return;\r\n        const newImageUrls = [];\r\n        images.forEach((image) => newImageUrls.push(URL.createObjectURL(image)));\r\n        setImageURLs(newImageUrls);\r\n    }, [images]);\r\n    const isValidFileUploaded = (file) => {\r\n        const validExtensions = ['png', 'jpeg', 'jpg'];\r\n        const fileExtension = file.type.split('/')[1];\r\n\r\n        return validExtensions.includes(fileExtension);\r\n    };\r\n    function onImageChange(e) {\r\n        const files = e.target.files;\r\n        let check;\r\n        for (let i = 0; i < e.target.files.length; i++) {\r\n            if (isValidFileUploaded(files[i])) {\r\n                check = true;\r\n            } else {\r\n                check = false;\r\n                break;\r\n            }\r\n        }\r\n        if (files.length < 9 && check) {\r\n            if (images.concat([...e.target.files]).length <= 9) {\r\n                const data = images.concat([...e.target.files]);\r\n                console.log(data);\r\n                setImages(data);\r\n            } else {\r\n                alert('Over the allowed file amount');\r\n            }\r\n        } else {\r\n            alert('File invalid');\r\n        }\r\n    }\r\n    const inputFile = useRef(null);\r\n    const onDivClick = () => {\r\n        inputFile.current.click();\r\n    };\r\n\r\n    const [errorResponse, setErrorResponse] = useState('');\r\n    const AddProductForm = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        validationSchema: Yup.object({\r\n            email: Yup.string()\r\n                .required('Bắt buộc!')\r\n                .matches(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, 'Vui lòng nhập một địa chỉ email hợp lệ!'),\r\n            password: Yup.string()\r\n                .required('Bắt buộc!')\r\n                .matches(\r\n                    /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+])[A-Za-z\\d][A-Za-z\\d!@#$%^&*()_+]{7,19}$/,\r\n                    'Mật khẩu phải có 7-19 ký tự và chứa ít nhất một chữ cái, một số và một ký tự đặc biệt!',\r\n                ),\r\n        }),\r\n        onSubmit: (values) => {\r\n            const newUser = {\r\n                Email: values.email,\r\n                Password: values.password,\r\n            };\r\n            const fetchApi = async () => {\r\n                // const res = await loginUser(newUser, dispatch, navigate);\r\n                const res = 1;\r\n                setErrorResponse(res);\r\n            };\r\n            fetchApi();\r\n        },\r\n    });\r\n    return (\r\n        <div>\r\n            <PageTitle>Thêm Mới Sản Phẩm</PageTitle>\r\n\r\n            {/* Breadcum */}\r\n            <div className=\"flex text-gray-800 dark:text-gray-300\">\r\n                <div className=\"flex items-center text-orange-600\">\r\n                    <Icon className=\"w-5 h-5\" aria-hidden=\"true\" icon={HomeIcon} />\r\n                    <NavLink exact to=\"/dashboard\" className=\"mx-2\">\r\n                        Kênh người bán\r\n                    </NavLink>\r\n                </div>\r\n                {'>'}\r\n                <p className=\"mx-2\">Thêm Mới Sản Phẩm</p>\r\n            </div>\r\n\r\n            <div className=\"w-full mt-8 grid gap-4 grid-col md:grid-cols-3 \">\r\n                <Modal isOpen={isModalOpen} onClose={closeModal} style={{ width: '1000px' }}>\r\n                    <ModalHeader className=\"flex mb-8 text-3xl \">\r\n                        {/* <div className=\"flex items-center\"> */}\r\n                        {/* <Icon icon={TrashIcon} className=\"w-6 h-6 mr-3\" /> */}\r\n                        Chỉnh sửa ngành hàng\r\n                        {/* </div> */}\r\n                    </ModalHeader>\r\n                    <ModalBody className=\"max-w-7xl max-h-96\">\r\n                        {/* Make sure you want to delete product{\" \"}\r\n            {selectedDeleteProduct && `\"${selectedDeleteProduct.name}\"`} */}\r\n                        <div className=\"flex-grow min-h-8 overflow-auto text-sm px-6\">\r\n                            <div className=\"rounded p-4 bg-gray-100\">\r\n                                <div className=\"relative overflow-hidden  rounded\">\r\n                                    <div className=\"py-3 relative w-96 flex bg-white\">\r\n                                        <ul className=\" h-80 flex-1\">\r\n                                            {categoriesResult.map((result, i) => (\r\n                                                <li\r\n                                                    key={result.id}\r\n                                                    className=\"my-2 flex justify-between leading-8 items-center px-4 hover:bg-gray-100\"\r\n                                                    onClick={() => fetchApi2(result)}\r\n                                                >\r\n                                                    <p className=\"text-sm font-semibold leading-8 text-ellipsis\">{result.name}</p>\r\n                                                    <div className=\"flex item-center \">\r\n                                                        <Icon className=\"w-5 h-5\" aria-hidden=\"true\" icon={RightArrow} />\r\n                                                    </div>\r\n                                                </li>\r\n                                            ))}\r\n                                        </ul>\r\n                                        <ul className=\" h-80 flex-1\">\r\n                                            {categories2?.map((result, i) => (\r\n                                                <li\r\n                                                    key={result.id}\r\n                                                    className=\"my-2 flex justify-between leading-8 items-center px-4 hover:bg-gray-100\"\r\n                                                    onClick={() => fetchApi3(result)}\r\n                                                >\r\n                                                    <p className=\"text-sm font-semibold leading-8 text-ellipsis\">{result.name}</p>\r\n                                                    {/* <div className=\"flex item-center \">\r\n                            <Icon\r\n                              className=\"w-5 h-5\"\r\n                              aria-hidden=\"true\"\r\n                              icon={RightArrow}\r\n                            />\r\n                          </div> */}\r\n                                                </li>\r\n                                            ))}\r\n                                        </ul>\r\n                                        {/* <ul className=\" h-80 flex-1\">\r\n                    {categories3?.map((result, i) => (\r\n                        <li\r\n                          key={result.id}\r\n                          className=\"my-2 flex justify-between leading-8 items-center px-4 \"\r\n                        >\r\n                          <p className=\"text-sm font-semibold leading-8 text-ellipsis\">\r\n                            {result.name}\r\n                          </p>\r\n                          <div className=\"flex item-center \">\r\n                            <Icon\r\n                              className=\"w-5 h-5\"\r\n                              aria-hidden=\"true\"\r\n                              icon={RightArrow}\r\n                            />\r\n                          </div>\r\n                        </li>\r\n                      ))}\r\n                    </ul> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <div className=\"w-full flex justify-between\">\r\n                            <div className=\"leading-5\">\r\n                                <span className=\"mr-1\">Đã chọn :</span>\r\n                                <span className=\"ml-1\">{selected?.name}</span>\r\n                            </div>\r\n                            <div className=\"flex\">\r\n                                {/* <div className=\"ml-4 hidden sm:block\">\r\n                  <Button layout=\"outline\" onClick={closeModal}>\r\n                    Cancel\r\n                  </Button>\r\n                </div> */}\r\n                                <div className=\"ml-4 hidden sm:block\">\r\n                                    <Button onClick={closeModal}>Xác nhận</Button>\r\n                                </div>\r\n                                <div className=\"block w-full sm:hidden\">\r\n                                    <Button block size=\"large\" layout=\"outline\" onClick={closeModal}>\r\n                                        Cancel\r\n                                    </Button>\r\n                                </div>\r\n                                <div className=\"block w-full sm:hidden\">\r\n                                    <Button block size=\"large\">\r\n                                        Delete\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n                <Card className=\"row-span-4 md:col-span-4 \">\r\n                    <form onSubmit={AddProductForm.handleSubmit}>\r\n                        <CardBody>\r\n                            <FormTitle>Hình ảnh sản phẩm</FormTitle>\r\n                            <div className=\"w-full flex flex-wrap\">\r\n                                {imageURLS.map((imageSrc, i) => (\r\n                                    <div key={i} className=\"w-20 h-20 rounded mr-4 mb-4\">\r\n                                        <div className=\"w-full h-full \">\r\n                                            <img src={imageSrc} alt=\"not fount\" className=\"w-20 h-20 rounded border \" />\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n\r\n                                <div className=\"w-20 h-20 rounded mr-4 mb-4  text-center  flex\">\r\n                                    <div\r\n                                        onClick={onDivClick}\r\n                                        className=\"w-full h-full rounded border border-dashed border-slate-600 flex items-center hover:bg-orange-100\"\r\n                                    >\r\n                                        <input type=\"file\" multiple={true} className=\"hidden\" onChange={onImageChange} ref={inputFile} />\r\n                                        <div className=\"flex text-orange-600 flex-col   \">\r\n                                            <div className=\"h-6\">\r\n                                                <i className=\"w-6 h-6 inline-block fill-current\">\r\n                                                    <svg viewBox=\"0 0 23 21\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                        <path d=\"M18.5 0A1.5 1.5 0 0 1 20 1.5V12c-.49-.07-1.01-.07-1.5 0V1.5H2v12.65l3.395-3.408a.75.75 0 0 1 .958-.087l.104.087L7.89 12.18l3.687-5.21a.75.75 0 0 1 .96-.086l.103.087 3.391 3.405c.81.813.433 2.28-.398 3.07A5.235 5.235 0 0 0 14.053 18H2a1.5 1.5 0 0 1-1.5-1.5v-15A1.5 1.5 0 0 1 2 0h16.5z\"></path>\r\n                                                        <path d=\"M6.5 4.5a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3zM18.5 14.25a.75.75 0 0 1 1.5 0v2.25h2.25a.75.75 0 0 1 0 1.5H20v2.25a.75.75 0 0 1-1.5 0V18h-2.25a.75.75 0 0 1 0-1.5h2.25v-2.25z\"></path>\r\n                                                    </svg>\r\n                                                </i>\r\n                                            </div>\r\n                                            <div className=\"leading-3 text-xs\">Thêm hình ảnh ({imageURLS.length}/9)</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <FormTitle>Tên sản phẩm</FormTitle>\r\n                            <Label>\r\n                                <Input className=\"mb-4\" placeholder=\"Nhập vào\" />\r\n                            </Label>\r\n\r\n                            <FormTitle>Danh mục</FormTitle>\r\n                            <Label>\r\n                                <Input\r\n                                    value={selected?.name}\r\n                                    onClick={() => openModal('1')}\r\n                                    className=\"mb-4\"\r\n                                    placeholder=\"Chọn danh mục\"\r\n                                    readOnly\r\n                                />\r\n                            </Label>\r\n\r\n                            <FormTitle>Size</FormTitle>\r\n                            <Label>\r\n                                <Input className=\"mb-4\" placeholder=\"Nhập size\" />\r\n                            </Label>\r\n                            <FormTitle>Mô tả sản phẩm</FormTitle>\r\n                            <Label>\r\n                                <Textarea className=\"mb-4\" rows=\"6\" />\r\n                            </Label>\r\n                            <FormTitle>Giá</FormTitle>\r\n                            <Label>\r\n                                <Input type=\"number\" className=\"mb-4 \" placeholder=\"Nhập vào\" />\r\n                            </Label>\r\n\r\n                            <div className=\"w-full\">\r\n                                <Button size=\"large\" iconLeft={AddIcon} onClick={() => openModal('1')}>\r\n                                    Thêm sản phẩm\r\n                                </Button>\r\n                            </div>\r\n                        </CardBody>\r\n                    </form>\r\n                </Card>\r\n\r\n                {/* <Card className=\"h-48\">\r\n          <CardBody>\r\n            <div className=\"flex mb-8\">\r\n              <Button layout=\"primary\" className=\"mr-3\" iconLeft={PublishIcon}>\r\n                Publish\r\n              </Button>\r\n              <Button layout=\"link\" iconLeft={StoreIcon}>\r\n                Save as Draft\r\n              </Button>\r\n            </div>\r\n            <Label className=\"mt-4\">\r\n              <FormTitle>Select Product Category</FormTitle>\r\n              <Select className=\"mt-1\">\r\n                <option>Electronic</option>\r\n                <option>Fashion</option>\r\n                <option>Cosmatics</option>\r\n                <option>Food and Meal</option>\r\n              </Select>\r\n            </Label>\r\n          </CardBody>\r\n        </Card> */}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddProduct;\r\n","import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-4 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n","import React from \"react\";\r\n\r\nconst Icon = ({ icon, ...props }) => {\r\n  const Icon = icon;\r\n  return <Icon {...props} />;\r\n};\r\n\r\nexport default Icon;\r\n","import * as httpRequest from '../utils/httpRequest';\r\n\r\nexport const searchProduct = async (keyword) => {\r\n    try {\r\n        const res = await httpRequest.get('search', {\r\n            params: {\r\n                keyword,\r\n                \r\n            },\r\n        });\r\n        // console.log(res.data);\r\n        return res.data;\r\n        // return res;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\nexport const getAllItem = async () => {\r\n    try {\r\n        const res = await httpRequest.get('item' );\r\n\r\n        return res.data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\nexport const detailProduct = async (id) => {\r\n    try {\r\n        const res = await httpRequest.get(`item/${id}`, {\r\n            \r\n        });\r\n        return res.data;\r\n    } catch (error) {\r\n        console.log(\"http\",error);\r\n    }\r\n};\r\nexport const allCategories = async () => {\r\n    try {\r\n        const res = await httpRequest.get('category');\r\n        return res.data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\nexport const categoriesById = async (id) => {\r\n    try {\r\n        const res = await httpRequest.get(`category/${id}`);\r\n        return res.data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\nexport const productByCategory = async (id) => {\r\n    try {\r\n        const res = await httpRequest.get(`category/${id}/item`);\r\n        return res.data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\nexport const categoriesShop = async (id) => {\r\n    try {\r\n        const res = await httpRequest.get(`shop/${id}/category`);\r\n        return res.data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\nexport const allShopProducts = async (id) => {\r\n    try {\r\n        const res = await httpRequest.get(`shop/${id}/item`);\r\n        return res.data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n\r\nexport const post = async (keyword,data={}) => {\r\n    try {\r\n        const res = await httpRequest.post('post', {\r\n            firstname: data.firstname,\r\n            lastName: data.lastName,\r\n        });\r\n        return res.data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\nexport const put = async (keyword,data={}) => {\r\n    try {\r\n        const res = await httpRequest.put('put', {\r\n            firstname: data.firstname,\r\n            lastName: data.lastName,\r\n        });\r\n        return res.data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\nexport const patch = async (keyword,data={}) => {\r\n    try {\r\n        const res = await httpRequest.patch('patch', {\r\n            firstname: data.firstname,\r\n            lastName: data.lastName,\r\n        });\r\n        return res.data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n\r\nexport const deleted = async (keyword,data={}) => {\r\n    try {\r\n        const res = await httpRequest.deleted('deleted', {\r\n            id: data.id,\r\n        });\r\n        return res.data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n"],"sourceRoot":""}