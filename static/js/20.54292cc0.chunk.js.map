{"version":3,"sources":["pages/Product/AddProduct.js","components/Typography/PageTitle.js","components/Icon.js","services/apiService.js"],"names":["FormTitle","children","className","AddProduct","useState","isModalOpen","setIsModalOpen","productId","a","closeModal","categoriesResult","setCategoriesResult","useEffect","apiService","result","fetchApi","categories2","setCategories2","fetchApi2","id","data","selected","setSelected","images","setImages","imageURLS","setImageURLs","length","newImageUrls","AddProductForm","values","Paths","console","log","forEach","image","push","URL","createObjectURL","isValidFileUploaded","file","fileExtension","type","split","includes","inputFile","useRef","useFormik","initialValues","CategoryId","Name","Price","Description","Size","validationSchema","Yup","onSubmit","newProduct","aria-hidden","icon","HomeIcon","exact","to","isOpen","onClose","style","width","map","i","key","onClick","name","RightArrow","fetchApi3","block","layout","handleSubmit","imageSrc","src","alt","current","click","multiple","onChange","e","check","files","target","concat","alert","ref","viewBox","xmlns","d","value","handleChange","placeholder","openModal","readOnly","rows","size","iconLeft","AddIcon","PageTitle","Icon","props","getAllItem","httpRequest","res","detailProduct","allCategories","categoriesById","productByCategory","categoriesShop","allShopProducts"],"mappings":"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","file":"static/js/20.54292cc0.chunk.js","sourcesContent":["import React from 'react';\r\nimport PageTitle from '../../components/Typography/PageTitle';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Icon from '../../components/Icon';\r\nimport { HomeIcon, AddIcon, PublishIcon, TrashIcon, RightArrow, StoreIcon } from '../../icons';\r\nimport { Card, CardBody, Label, Input, Textarea, Button, Select, Modal, ModalHeader, ModalBody, ModalFooter } from '@windmill/react-ui';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport * as apiService from '../../services/apiService';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst FormTitle = ({ children }) => {\r\n    return <h2 className=\"mb-3 text-sm font-semibold text-gray-600 dark:text-gray-300\">{children}</h2>;\r\n};\r\n\r\nconst AddProduct = () => {\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [selectedDeleteProduct, setSelectedDeleteProduct] = useState(null);\r\n    async function openModal(productId) {\r\n        // let product = await data.filter((product) => product.id === productId)[0];\r\n        // console.log(product);\r\n        // setSelectedDeleteProduct(product);\r\n        setIsModalOpen(true);\r\n    }\r\n    function closeModal() {\r\n        setIsModalOpen(false);\r\n    }\r\n    const [categoriesResult, setCategoriesResult] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            const result = await apiService.allCategories();\r\n            setCategoriesResult(result);\r\n        };\r\n        fetchApi();\r\n    }, []);\r\n    const [categories2, setCategories2] = useState([]);\r\n    const fetchApi2 = async (result) => {\r\n        const data = await apiService.categoriesById(result.id);\r\n        // setSelected(result);\r\n        // AddProductForm.values.CategoryId = result;\r\n        setCategories2(data);\r\n    };\r\n    const fetchApi3 = (result) => {\r\n        setSelected(result);\r\n        AddProductForm.values.CategoryId = result;\r\n    };\r\n\r\n    const [selected, setSelected] = useState();\r\n\r\n    const [images, setImages] = useState([]);\r\n    const [imageURLS, setImageURLs] = useState([]);\r\n    useEffect(() => {\r\n        if (images.length < 1) return;\r\n        const newImageUrls = [];\r\n\r\n        AddProductForm.values.Paths=images\r\n        console.log(AddProductForm.values.Paths)\r\n\r\n        images.forEach((image) => newImageUrls.push(URL.createObjectURL(image)));\r\n        setImageURLs(newImageUrls);\r\n    }, [images]);\r\n    const isValidFileUploaded = (file) => {\r\n        const validExtensions = ['png', 'jpeg', 'jpg'];\r\n        const fileExtension = file.type.split('/')[1];\r\n\r\n        return validExtensions.includes(fileExtension);\r\n    };\r\n    function onImageChange(e) {\r\n        const files = e.target.files;\r\n        let check;\r\n        for (let i = 0; i < e.target.files.length; i++) {\r\n            if (isValidFileUploaded(files[i])) {\r\n                check = true;\r\n            } else {\r\n                check = false;\r\n                break;\r\n            }\r\n        }\r\n        if (files.length < 9 && check) {\r\n            if (images.concat([...e.target.files]).length <= 9) {\r\n                const data = images.concat([...e.target.files]);\r\n                setImages(data);\r\n            } else {\r\n                alert('Over the allowed file amount');\r\n            }\r\n        } else {\r\n            alert('File invalid');\r\n        }\r\n    }\r\n    const inputFile = useRef(null);\r\n    const onDivClick = () => {\r\n        inputFile.current.click();\r\n    };\r\n\r\n    const [errorResponse, setErrorResponse] = useState('');\r\n    const AddProductForm = useFormik({\r\n        initialValues: {\r\n            CategoryId: null,\r\n            // ShopId: null,\r\n            Name: '',\r\n            Price: null,\r\n            Description: '',\r\n            Size: '',\r\n            // Quantity: null,\r\n            Paths: [],\r\n        },\r\n        validationSchema: Yup.object({\r\n            // CategoryId: Yup.string().required('Bắt buộc!'),\r\n            // Name: Yup.string().required('Bắt buộc!'),\r\n            // Price: Yup.string().required('Bắt buộc!'),\r\n            // Description: Yup.string().required('Bắt buộc!'),\r\n            // Size: Yup.string().required('Bắt buộc!'),\r\n            // Quantity: Yup.string().required('Bắt buộc!'),\r\n            // Paths: Yup.string().required('Bắt buộc!'),\r\n        }),\r\n        onSubmit: (values) => {\r\n            const newProduct = {\r\n                CategoryId: values.CategoryId.id,\r\n                Name: values.Name,\r\n                Price: values.Price,\r\n                Description: values.Description,\r\n                Size: values.Size,\r\n                // Quantity: null,\r\n                Paths: values.Paths,\r\n            };\r\n            console.log(\"submit\",newProduct);\r\n            // const fetchApi = async () => {\r\n            //     // const res = await loginUser(newUser, dispatch, navigate);\r\n            //     const res = 1;\r\n            //     setErrorResponse(res);\r\n            // };\r\n            // fetchApi();\r\n        },\r\n    });\r\n    return (\r\n        <div>\r\n            <PageTitle>Thêm Mới Sản Phẩm</PageTitle>\r\n\r\n            {/* Breadcum */}\r\n            <div className=\"flex text-gray-800 dark:text-gray-300\">\r\n                <div className=\"flex items-center text-orange-600\">\r\n                    <Icon className=\"w-5 h-5\" aria-hidden=\"true\" icon={HomeIcon} />\r\n                    <NavLink exact to=\"/dashboard\" className=\"mx-2\">\r\n                        Kênh người bán\r\n                    </NavLink>\r\n                </div>\r\n                {'>'}\r\n                <p className=\"mx-2\">Thêm Mới Sản Phẩm</p>\r\n            </div>\r\n\r\n            <div className=\"w-full mt-8 grid gap-4 grid-col md:grid-cols-3 \">\r\n                <Modal isOpen={isModalOpen} onClose={closeModal} style={{ width: '1000px' }}>\r\n                    <ModalHeader className=\"flex mb-8 text-3xl \">\r\n                        {/* <div className=\"flex items-center\"> */}\r\n                        {/* <Icon icon={TrashIcon} className=\"w-6 h-6 mr-3\" /> */}\r\n                        Chỉnh sửa ngành hàng\r\n                        {/* </div> */}\r\n                    </ModalHeader>\r\n                    <ModalBody className=\"max-w-7xl max-h-96\">\r\n                        {/* Make sure you want to delete product{\" \"}\r\n            {selectedDeleteProduct && `\"${selectedDeleteProduct.name}\"`} */}\r\n                        <div className=\"flex-grow min-h-8 overflow-auto text-sm px-6\">\r\n                            <div className=\"rounded p-4 bg-gray-100\">\r\n                                <div className=\"relative overflow-hidden  rounded\">\r\n                                    <div className=\"py-3 relative w-96 flex bg-white\">\r\n                                        <ul className=\" h-80 flex-1\">\r\n                                            {categoriesResult.map((result, i) => (\r\n                                                <li\r\n                                                    key={result.id}\r\n                                                    className=\"my-2 flex justify-between leading-8 items-center px-4 hover:bg-gray-100\"\r\n                                                    onClick={() => fetchApi2(result)}\r\n                                                >\r\n                                                    <p className=\"text-sm font-semibold leading-8 text-ellipsis\">{result.name}</p>\r\n                                                    <div className=\"flex item-center \">\r\n                                                        <Icon className=\"w-5 h-5\" aria-hidden=\"true\" icon={RightArrow} />\r\n                                                    </div>\r\n                                                </li>\r\n                                            ))}\r\n                                        </ul>\r\n                                        <ul className=\" h-80 flex-1\">\r\n                                            {categories2?.map((result, i) => (\r\n                                                <li\r\n                                                    key={result.id}\r\n                                                    className=\"my-2 flex justify-between leading-8 items-center px-4 hover:bg-gray-100\"\r\n                                                    onClick={() => fetchApi3(result)}\r\n                                                >\r\n                                                    <p className=\"text-sm font-semibold leading-8 text-ellipsis\">{result.name}</p>\r\n                                                </li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <div className=\"w-full flex justify-between\">\r\n                            <div className=\"leading-5\">\r\n                                <span className=\"mr-1\">Đã chọn :</span>\r\n                                <span className=\"ml-1\">{selected?.name}</span>\r\n                            </div>\r\n                            <div className=\"flex\">\r\n                                <div className=\"ml-4 \">\r\n                                    <Button block layout=\"outline\" onClick={closeModal}>\r\n                                        HUỷ\r\n                                    </Button>\r\n                                </div>\r\n                                <div className=\"ml-4 hidden sm:block\">\r\n                                    <Button onClick={closeModal}>Xác nhận</Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n                <Card className=\"row-span-4 md:col-span-4 \">\r\n                    <form onSubmit={AddProductForm.handleSubmit}>\r\n                        <CardBody>\r\n                            <FormTitle>Hình ảnh sản phẩm</FormTitle>\r\n                            <div className=\"w-full flex flex-wrap\">\r\n                                {imageURLS.map((imageSrc, i) => (\r\n                                    <div key={i} className=\"w-20 h-20 rounded mr-4 mb-4\">\r\n                                        <div className=\"w-full h-full \">\r\n                                            <img src={imageSrc} alt=\"not fount\" className=\"w-20 h-20 rounded border \" />\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n\r\n                                <div className=\"w-20 h-20 rounded mr-4 mb-4  text-center  flex\">\r\n                                    <div\r\n                                        onClick={onDivClick}\r\n                                        className=\"w-full h-full rounded border border-dashed border-slate-600 flex items-center hover:bg-orange-100\"\r\n                                    >\r\n                                        <input\r\n                                            id=\"Paths\"\r\n                                            name=\"Paths\"\r\n                                            // value={AddProductForm.values.Paths}\r\n                                            type=\"file\"\r\n                                            multiple={true}\r\n                                            className=\"hidden\"\r\n                                            onChange={onImageChange}\r\n                                            ref={inputFile}\r\n                                        />\r\n                                        <div className=\"flex text-orange-600 flex-col   \">\r\n                                            <div className=\"h-6\">\r\n                                                <i className=\"w-6 h-6 inline-block fill-current\">\r\n                                                    <svg viewBox=\"0 0 23 21\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                        <path d=\"M18.5 0A1.5 1.5 0 0 1 20 1.5V12c-.49-.07-1.01-.07-1.5 0V1.5H2v12.65l3.395-3.408a.75.75 0 0 1 .958-.087l.104.087L7.89 12.18l3.687-5.21a.75.75 0 0 1 .96-.086l.103.087 3.391 3.405c.81.813.433 2.28-.398 3.07A5.235 5.235 0 0 0 14.053 18H2a1.5 1.5 0 0 1-1.5-1.5v-15A1.5 1.5 0 0 1 2 0h16.5z\"></path>\r\n                                                        <path d=\"M6.5 4.5a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3zM18.5 14.25a.75.75 0 0 1 1.5 0v2.25h2.25a.75.75 0 0 1 0 1.5H20v2.25a.75.75 0 0 1-1.5 0V18h-2.25a.75.75 0 0 1 0-1.5h2.25v-2.25z\"></path>\r\n                                                    </svg>\r\n                                                </i>\r\n                                            </div>\r\n                                            <div className=\"leading-3 text-xs\">Thêm hình ảnh ({imageURLS.length}/9)</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <FormTitle>Tên sản phẩm</FormTitle>\r\n                            <Label>\r\n                                <Input\r\n                                    id=\"Name\"\r\n                                    name=\"Name\"\r\n                                    value={AddProductForm.values.Name}\r\n                                    onChange={AddProductForm.handleChange}\r\n                                    className=\"mb-4\"\r\n                                    placeholder=\"Nhập vào\"\r\n                                />\r\n                            </Label>\r\n                            <FormTitle>Danh mục</FormTitle>\r\n                            <Label>\r\n                                <Input\r\n                                    id=\"CategoryId\"\r\n                                    name=\"CategoryId\"\r\n                                    value={AddProductForm.values.CategoryId?.name}\r\n                                    onChange={AddProductForm.handleChange}\r\n                                    // value={selected?.name}\r\n                                    onClick={() => openModal('1')}\r\n                                    className=\"mb-4\"\r\n                                    placeholder=\"Chọn danh mục\"\r\n                                    readOnly\r\n                                />\r\n                            </Label>\r\n                            <FormTitle>Size</FormTitle>\r\n                            <Label>\r\n                                <Input\r\n                                    id=\"Size\"\r\n                                    name=\"Size\"\r\n                                    value={AddProductForm.values.Size}\r\n                                    onChange={AddProductForm.handleChange}\r\n                                    className=\"mb-4\"\r\n                                    placeholder=\"Nhập size\"\r\n                                />\r\n                            </Label>\r\n                            <FormTitle>Mô tả sản phẩm</FormTitle>\r\n                            <Label>\r\n                                <Textarea\r\n                                    id=\"Description\"\r\n                                    name=\"Description\"\r\n                                    value={AddProductForm.values.Description}\r\n                                    onChange={AddProductForm.handleChange}\r\n                                    className=\"mb-4\"\r\n                                    rows=\"6\"\r\n                                />\r\n                            </Label>\r\n                            <FormTitle>Giá</FormTitle>\r\n                            <Label>\r\n                                <Input\r\n                                    id=\"Price\"\r\n                                    name=\"Price\"\r\n                                    value={AddProductForm.values.Price}\r\n                                    onChange={AddProductForm.handleChange}\r\n                                    type=\"number\"\r\n                                    className=\"mb-4 \"\r\n                                    placeholder=\"Nhập vào\"\r\n                                />\r\n                            </Label>\r\n\r\n                            <div className=\"w-full\">\r\n                                <Button type=\"submit\" size=\"large\" iconLeft={AddIcon}>\r\n                                    Thêm sản phẩm\r\n                                </Button>\r\n                            </div>\r\n                        </CardBody>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddProduct;\r\n","import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-4 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n","import React from \"react\";\r\n\r\nconst Icon = ({ icon, ...props }) => {\r\n  const Icon = icon;\r\n  return <Icon {...props} />;\r\n};\r\n\r\nexport default Icon;\r\n","import * as httpRequest from '../utils/httpRequest';\r\n\r\nexport const searchProduct = async (keyword) => {\r\n    try {\r\n        const res = await httpRequest.get('search', {\r\n            params: {\r\n                keyword,\r\n                \r\n            },\r\n        });\r\n        // console.log(res.data);\r\n        return res.data;\r\n        // return res;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\nexport const getAllItem = async () => {\r\n    try {\r\n        const res = await httpRequest.get('item' );\r\n\r\n        return res.data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\nexport const detailProduct = async (id) => {\r\n    try {\r\n        const res = await httpRequest.get(`item/${id}`, {\r\n            \r\n        });\r\n        return res.data;\r\n    } catch (error) {\r\n        console.log(\"http\",error);\r\n    }\r\n};\r\nexport const allCategories = async () => {\r\n    try {\r\n        const res = await httpRequest.get('category');\r\n        return res.data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\nexport const categoriesById = async (id) => {\r\n    try {\r\n        const res = await httpRequest.get(`category/${id}`);\r\n        return res.data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\nexport const productByCategory = async (id) => {\r\n    try {\r\n        const res = await httpRequest.get(`category/${id}/item`);\r\n        return res.data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\nexport const categoriesShop = async (id) => {\r\n    try {\r\n        const res = await httpRequest.get(`shop/${id}/category`);\r\n        return res.data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\nexport const allShopProducts = async (id) => {\r\n    try {\r\n        const res = await httpRequest.get(`shop/${id}/item`);\r\n        return res.data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nexport const put = async (keyword,data={}) => {\r\n    try {\r\n        const res = await httpRequest.put('put', {\r\n            firstname: data.firstname,\r\n            lastName: data.lastName,\r\n        });\r\n        return res.data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\nexport const patch = async (keyword,data={}) => {\r\n    try {\r\n        const res = await httpRequest.patch('patch', {\r\n            firstname: data.firstname,\r\n            lastName: data.lastName,\r\n        });\r\n        return res.data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n\r\nexport const deleted = async (keyword,data={}) => {\r\n    try {\r\n        const res = await httpRequest.deleted('deleted', {\r\n            id: data.id,\r\n        });\r\n        return res.data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n"],"sourceRoot":""}