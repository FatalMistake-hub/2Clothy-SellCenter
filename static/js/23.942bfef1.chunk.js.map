{"version":3,"sources":["pages/Category/DetailCategory.js","../node_modules/classnames/index.js","components/ProductIcon.js"],"names":["FormTitle","children","className","ProductsAll","id","useParams","fetchApi","a","apiService","dataItem","dataAllItem","console","log","setResponseTable","setResponse","items","filter","item","categoryId","productArray","Array","length","fill","map","i","setAllCheck","useEffect","useState","page","setPage","data","setData","response","totalResults","slice","pageTable","setPageTable","dataTable","setDataTable","responseTable","totalResultsTable","isModalDeleteOpen","setIsModalDeleteOpen","isModalAddOpen","setIsModalAddOpen","selectedDeleteProduct","setSelectedDeleteProduct","openModal","productId","modal","closeModal","allCheck","checked","setChecked","handleCheck","prev","isChecked","includes","concat","dispatch","useDispatch","user","useSelector","authRemainingSelector","history","useHistory","currentUser","login","axiosJWT","accessToken","createInstance","AuthSlice","actions","loginSuccess","handleAddItemCategory","listItem","CategoryId","Items","addProductCategoryShop","isOpen","onClose","style","width","icon","TrashIcon","name","layout","onClick","type","onChange","product","key","src","images","path","alt","quantity","size","price","toLocaleString","resultsPerPage","label","p","aria-hidden","HomeIcon","exact","to","imagePath","iconLeft","AddIcon","aria-label","hasOwn","hasOwnProperty","classNames","classes","arguments","arg","argType","push","isArray","inner","apply","call","join","module","exports","default","ProductIcon","loading"],"mappings":"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","file":"static/js/23.942bfef1.chunk.js","sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from 'react';\r\nimport PageTitle from '../../components/Typography/PageTitle';\r\nimport { Link, NavLink, useHistory } from 'react-router-dom';\r\n\r\nimport { EditIcon, EyeIcon, GridViewIcon, HomeIcon, ListViewIcon, TrashIcon, AddIcon } from '../../icons';\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    Label,\r\n    Select,\r\n    Button,\r\n    TableBody,\r\n    TableContainer,\r\n    Table,\r\n    TableHeader,\r\n    TableCell,\r\n    TableRow,\r\n    TableFooter,\r\n    Avatar,\r\n    Badge,\r\n    Pagination,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Input,\r\n} from '@windmill/react-ui';\r\nimport response from '../../utils/demo/productData';\r\nimport Icon from '../../components/Icon';\r\nimport { genRating } from '../../utils/genarateRating';\r\nimport ProductIcon from '../../components/ProductIcon';\r\nimport * as apiService from '../../services/apiService';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authRemainingSelector } from '../../redux/selector';\r\nimport AuthSlice from '../../redux/AuthSlice';\r\nimport { createInstance } from '../../services/createInstance';\r\nimport { addProductCategoryShop } from '../../services/authService';\r\nconst FormTitle = ({ children }) => {\r\n    return <h2 className=\" text-3xl  font-semibold text-gray-600 dark:text-gray-300\">{children}</h2>;\r\n};\r\nconst ProductsAll = () => {\r\n    const { id } = useParams();\r\n\r\n    const fetchApi = async (id) => {\r\n        const dataItem = await apiService.productByCategory(id);\r\n        const dataAllItem = await apiService.allShopProducts(1);\r\n        console.log(dataItem);\r\n        setResponseTable(dataItem);\r\n        setResponse(dataAllItem[0].items.filter((item) => item.categoryId != id));\r\n        const productArray = new Array(dataAllItem[0]?.items.length).fill(false);\r\n        dataAllItem[0].items.map((item, i) => {\r\n            productArray[i] = item.id;\r\n        });\r\n        setAllCheck(productArray);\r\n    };\r\n    useEffect(() => {\r\n        fetchApi(id);\r\n    }, [id]);\r\n\r\n    // For modal pagination\r\n    const [page, setPage] = useState(1);\r\n    const [data, setData] = useState([]);\r\n    const [response, setResponse] = useState([]);\r\n\r\n    const resultsPerPage = 5;\r\n    const totalResults = response?.length;\r\n\r\n    function onPageChange(p) {\r\n        setPage(p);\r\n    }\r\n    useEffect(() => {\r\n        setData(response?.slice((page - 1) * resultsPerPage, page * resultsPerPage));\r\n    }, [page, resultsPerPage, response]);\r\n    // For main Table pagination\r\n    const [pageTable, setPageTable] = useState(1);\r\n    const [dataTable, setDataTable] = useState([]);\r\n    const [responseTable, setResponseTable] = useState([]);\r\n\r\n    const resultsPerPageTable = 10;\r\n    const totalResultsTable = responseTable.items?.length;\r\n\r\n    function onPageChangeTable(p) {\r\n        setPageTable(p);\r\n    }\r\n    useEffect(() => {\r\n        setDataTable(responseTable.items?.slice((pageTable - 1) * resultsPerPageTable, pageTable * resultsPerPageTable));\r\n    }, [pageTable, resultsPerPageTable, responseTable.items]);\r\n\r\n    // Delete action model\r\n    const [isModalDeleteOpen, setIsModalDeleteOpen] = useState(false);\r\n    const [isModalAddOpen, setIsModalAddOpen] = useState(false);\r\n    const [selectedDeleteProduct, setSelectedDeleteProduct] = useState(null);\r\n    const openModal = (productId, modal) => {\r\n        if (modal == 'del') {\r\n            setSelectedDeleteProduct(productId);\r\n            setIsModalDeleteOpen(true);\r\n        } else {\r\n            setIsModalAddOpen(true);\r\n        }\r\n    };\r\n\r\n    const closeModal = (modal) => {\r\n        if (modal == 'del') {\r\n            setIsModalDeleteOpen(false);\r\n        } else {\r\n            setIsModalAddOpen(false);\r\n        }\r\n    };\r\n\r\n    const [allCheck, setAllCheck] = useState();\r\n    const [checked, setChecked] = useState([]);\r\n    console.log(checked);\r\n    const handleCheck = (id) => {\r\n        setChecked((prev) => {\r\n            const isChecked = checked.includes(id);\r\n\r\n            console.log('id', id);\r\n            if (id == 'all' && isChecked) {\r\n                return [];\r\n            }\r\n            if (isChecked) {\r\n                return checked.filter((item) => {\r\n                    if (item !== id && item != 'all') {\r\n                        return item;\r\n                    }\r\n                });\r\n            } else {\r\n                if (id == 'all') {\r\n                    return allCheck.concat('all');\r\n                }\r\n                return [...prev, id];\r\n            }\r\n        });\r\n    };\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(authRemainingSelector);\r\n    const history = useHistory();\r\n\r\n    const currentUser = user?.login.currentUser;\r\n    const accessToken = currentUser?.accessToken;\r\n    let axiosJWT = createInstance(currentUser, dispatch, AuthSlice.actions.loginSuccess);\r\n    const handleAddItemCategory = async () => {\r\n        let listItem = {\r\n            CategoryId: id,\r\n            Items: checked.filter((item) => item != 'all'),\r\n        };\r\n        console.log(listItem);\r\n        await addProductCategoryShop(listItem, history,currentUser.accessToken, axiosJWT);\r\n    };\r\n    return (\r\n        <div>\r\n            {/* Delete category model */}\r\n            <Modal isOpen={isModalDeleteOpen} onClose={() => closeModal('del')} style={{ width: '400px' }}>\r\n                <ModalHeader className=\"flex items-center\">\r\n                    <Icon icon={TrashIcon} className=\"w-6 h-6 mr-3\" />\r\n                    Xoá danh mục\r\n                </ModalHeader>\r\n                <ModalBody>Bạn có muốn xoá sản phẩm {selectedDeleteProduct && `\"${selectedDeleteProduct.name}\"`} khỏi danh mục ?</ModalBody>\r\n                <ModalFooter>\r\n                    <div className=\"hidden sm:block\">\r\n                        <Button layout=\"outline\" onClick={() => closeModal('del')}>\r\n                            Huỷ\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"hidden sm:block\">\r\n                        <Button>Xoá</Button>\r\n                    </div>\r\n                </ModalFooter>\r\n            </Modal>\r\n            {/* Add category model */}\r\n            <Modal isOpen={isModalAddOpen} onClose={() => closeModal('add')} style={{ width: '1000px' }}>\r\n                <ModalHeader className=\"flex items-center mb-4\">Chọn sản phẩm</ModalHeader>\r\n                <ModalBody>\r\n                    <TableContainer className=\"mb-8\">\r\n                        <Table>\r\n                            <TableHeader>\r\n                                <tr>\r\n                                    <TableCell>\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            id={`custom-checkbox-all`}\r\n                                            // name={name}\r\n                                            // value={name}\r\n                                            checked={checked?.includes('all')}\r\n                                            onChange={() => handleCheck('all')}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>Name</TableCell>\r\n                                    <TableCell>Stock</TableCell>\r\n                                    <TableCell>Size</TableCell>\r\n                                    <TableCell>QTY</TableCell>\r\n                                    <TableCell>Price</TableCell>\r\n                                </tr>\r\n                            </TableHeader>\r\n                            <TableBody>\r\n                                {data?.map((product) => (\r\n                                    <TableRow key={product.id}>\r\n                                        <TableCell>\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                id={`custom-checkbox-${product.id}`}\r\n                                                // name={name}\r\n                                                // value={name}\r\n\r\n                                                checked={checked?.includes(product.id)}\r\n                                                onChange={() => handleCheck(product.id)}\r\n                                            />\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <div className=\"flex items-center text-sm\">\r\n                                                <ProductIcon\r\n                                                    className=\"hidden mr-4 md:block\"\r\n                                                    src={product.images[0].path}\r\n                                                    alt=\"Product image\"\r\n                                                />\r\n                                                <div>\r\n                                                    <p className=\"font-semibold \">{product.name}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <Badge type={product.quantity > 0 ? 'success' : 'danger'}>\r\n                                                {product.quantity > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                            </Badge>\r\n                                        </TableCell>\r\n\r\n                                        <TableCell className=\"text-sm\">{product.size}</TableCell>\r\n                                        <TableCell className=\"text-sm\">{product.quantity}</TableCell>\r\n                                        <TableCell className=\"text-sm\">{product.price.toLocaleString('es-ES')} ₫</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <TableFooter>\r\n                            <Pagination\r\n                                totalResults={totalResults}\r\n                                resultsPerPage={resultsPerPage}\r\n                                label=\"Table navigation\"\r\n                                onChange={onPageChange}\r\n                            />\r\n                        </TableFooter>\r\n                    </TableContainer>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <div className=\"w-full flex justify-between\">\r\n                        <div className=\"leading-5 flex items-center\">\r\n                            <span className=\"mr-1 font-normal text-gray-600\">Số sản phẩm đã chọn :</span>\r\n                            <span className=\"ml-1 mr-1\">{checked.filter((item) => item != 'all')?.length} </span>\r\n                        </div>\r\n                        <div className=\"flex\">\r\n                            <div className=\"ml-4  \">\r\n                                <Button layout=\"outline\" onClick={() => closeModal('add')}>\r\n                                    Huỷ\r\n                                </Button>\r\n                            </div>\r\n                            <div className=\"ml-4 hidden sm:block\">\r\n                                <Button onClick={handleAddItemCategory}>Xác nhận</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ModalFooter>\r\n            </Modal>\r\n            {/* Breadcum */}\r\n            <div className=\"flex mt-8 text-gray-800 dark:text-gray-300\">\r\n                <div className=\"flex items-center text-orange-600\">\r\n                    <Icon className=\"w-5 h-5\" aria-hidden=\"true\" icon={HomeIcon} />\r\n                    <NavLink exact to=\"/dashboard\" className=\"mx-2\">\r\n                        Kênh người bán\r\n                    </NavLink>\r\n                </div>\r\n                {'>'}\r\n                <div className=\"flex items-center text-orange-600\">\r\n                    <NavLink exact to=\"/all-categories\" className=\"mx-2\">\r\n                        Quản lý danh mục\r\n                    </NavLink>\r\n                </div>\r\n\r\n                {'>'}\r\n                <p className=\"mx-2\">Chi tiết danh mục</p>\r\n            </div>\r\n\r\n            {/* Sort */}\r\n            <Card className=\"mt-8 mb-5 shadow-md \">\r\n                <CardBody className=\"flex items-center\">\r\n                    <div className=\"p-2\">\r\n                        <ProductIcon\r\n                            src={responseTable?.imagePath}\r\n                            alt=\"Product image\"\r\n                            size=\"w-32 h-32\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <FormTitle>{responseTable?.name}</FormTitle>\r\n                        <div className=\"flex items-center mt-2\">\r\n                            <span className=\"font-medium mr-1 text-gray-400\">Tạo bởi:</span>\r\n                            <span className=\"font-medium mr-4\">Người bán | Tự chọn</span>\r\n                            <span className=\"font-medium mr-1 text-gray-400\">Sản phẩm:</span>\r\n                            <span className=\"font-medium \">{responseTable?.items?.length}</span>\r\n                        </div>\r\n                    </div>\r\n                </CardBody>\r\n            </Card>\r\n            <Card className=\"px-8 shadow-md mb-8\">\r\n                <CardBody>\r\n                    <div className=\"flex items-center justify-between py-4 mb-5 \">\r\n                        <div className=\"flex items-center w-full justify-between \">\r\n                            <div className=\"flex items-center\">\r\n                                <FormTitle>Danh sách sản phẩm</FormTitle>\r\n                            </div>\r\n                            <div className=\" flex justify-end\">\r\n                                <Button size=\"large\" iconLeft={AddIcon} onClick={() => openModal(null, 'add')}>\r\n                                    Thêm sản phẩm\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <TableContainer className=\"mb-8\">\r\n                        <Table>\r\n                            <TableHeader>\r\n                                <tr>\r\n                                    <TableCell>Tên sản phẩm</TableCell>\r\n                                    <TableCell>Giá</TableCell>\r\n                                    <TableCell>Số lượng</TableCell>\r\n                                    {/* <TableCell>Price</TableCell> */}\r\n                                    <TableCell>Thao tác</TableCell>\r\n                                </tr>\r\n                            </TableHeader>\r\n                            <TableBody>\r\n                                {dataTable?.map((product) => (\r\n                                    <TableRow key={product.id}>\r\n                                        <TableCell>\r\n                                            <div className=\"flex items-center text-sm\">\r\n                                                <ProductIcon\r\n                                                    className=\"hidden mr-4 md:block\"\r\n                                                    src={product.images[0].path}\r\n                                                    alt=\"Product image\"\r\n                                                />\r\n                                                <div>\r\n                                                    <p className=\"font-semibold\">{product.name}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </TableCell>\r\n\r\n                                        <TableCell className=\"text-sm\">{product.price}</TableCell>\r\n                                        <TableCell className=\"text-sm\">{product.quantity}</TableCell>\r\n                                        <TableCell>\r\n                                            <div className=\"flex\">\r\n                                                <Button\r\n                                                    icon={TrashIcon}\r\n                                                    layout=\"outline\"\r\n                                                    onClick={() => openModal(product, 'del')}\r\n                                                    aria-label=\"Delete\"\r\n                                                />\r\n                                            </div>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <TableFooter>\r\n                            <Pagination\r\n                                totalResults={totalResultsTable}\r\n                                resultsPerPage={resultsPerPageTable}\r\n                                label=\"Table navigation\"\r\n                                onChange={onPageChangeTable}\r\n                            />\r\n                        </TableFooter>\r\n                    </TableContainer>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductsAll;\r\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nfunction ProductIcon({ src, alt ,size='w-20 h-20'}) {\r\n    \r\n    return (\r\n        <>\r\n            <div className={`relative rounded-md inline-block ${size} hidden mr-4 md:block`}>\r\n                <img className=\"object-cover w-full h-full rounded-md\" src={src} alt={alt} loading=\"lazy\" />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductIcon;\r\n"],"sourceRoot":""}