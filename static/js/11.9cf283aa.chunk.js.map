{"version":3,"sources":["components/Cards/InfoCard.js","components/RoundIcon.js","pages/Order/DetailOrder.js","components/Typography/PageTitle.js","components/ProductIcon.js","../node_modules/webpack/buildin/module.js","components/OrdersTable.js"],"names":["InfoCard","title","value","icon","children","className","RoundIcon","Icon","iconColorClass","bgColorClass","cls","classNames","props","Orders","id","useParams","useState","response","setResponse","dispatch","useDispatch","user","useSelector","authRemainingSelector","currentUser","login","accessToken","useEffect","a","axiosJWT","createInstance","AuthSlice","actions","loginSuccess","apiAuthService","result","orders","console","log","fetchApi","aria-hidden","HomeIcon","exact","to","src","moment","dateCreated","format","PeopleIcon","phoneNumber","address","MoneyIcon","paymentName","orderDetails","map","order","i","key","itemImg","alt","itemName","size","quantity","price","toLocaleString","reduce","total","type","statusId","statusName","PageTitle","ProductIcon","loading","module","exports","webpackPolyfill","deprecate","paths","Object","defineProperty","enumerable","get","l","OrdersTable","resultsPerPage","filter","path","page","setPage","data","setData","slice","handleOrder","purchaseId","status","StatusId","billId","aria-label","onClick","handleStatus","splice","length","totalResults","label","onChange","p"],"mappings":"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","file":"static/js/11.9cf283aa.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Card, CardBody } from '@windmill/react-ui'\r\n\r\nfunction InfoCard({ title, value, children: icon }) {\r\n  return (\r\n    <Card>\r\n      <CardBody className=\"flex items-center\">\r\n        {icon}\r\n        <div>\r\n          <p className=\"mb-2 text-sm font-medium text-gray-600 dark:text-gray-400\">{title}</p>\r\n          <p className=\"text-lg font-semibold text-gray-700 dark:text-gray-200\">{value}</p>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default InfoCard\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nfunction RoundIcon({\r\n  icon: Icon,\r\n  iconColorClass = \"text-orange-600 dark:text-orange-100\",\r\n  bgColorClass = \"bg-orange-100 dark:bg-orange-600\",\r\n  className,\r\n}) {\r\n  const baseStyle = \"p-3 rounded-md\";\r\n\r\n  const cls = classNames(baseStyle, iconColorClass, bgColorClass, className);\r\n  return (\r\n    <div className={cls}>\r\n      <Icon className=\"w-5 h-5\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoundIcon;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PageTitle from '../../components/Typography/PageTitle';\r\nimport { NavLink, useParams } from 'react-router-dom';\r\nimport { HomeIcon, MoneyIcon, PeopleIcon } from '../../icons';\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    Label,\r\n    Select,\r\n    TableBody,\r\n    TableContainer,\r\n    Table,\r\n    TableHeader,\r\n    TableCell,\r\n    TableRow,\r\n    TableFooter,\r\n    Badge,\r\n} from '@windmill/react-ui';\r\nimport OrdersTable from '../../components/OrdersTable';\r\nimport RoundIcon from '../../components/RoundIcon';\r\nimport InfoCard from '../../components/Cards/InfoCard';\r\nimport * as apiAuthService from '../../services/authService';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authRemainingSelector } from '../../redux/selector';\r\nimport { createInstance } from '../../services/createInstance';\r\nimport moment from 'moment/moment';\r\nimport AuthSlice from '../../redux/AuthSlice';\r\nimport ProductIcon from '../../components/ProductIcon';\r\nfunction Icon({ icon, ...props }) {\r\n    const Icon = icon;\r\n    return <Icon {...props} />;\r\n}\r\n\r\nconst Orders = () => {\r\n    const { id } = useParams();\r\n    // pagination setup\r\n    const [resultsPerPage, setResultPerPage] = useState(10);\r\n    const [filter, setFilter] = useState('all');\r\n    const [response, setResponse] = useState([]);\r\n    // pagination setup\r\n\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(authRemainingSelector);\r\n    const currentUser = user?.login.currentUser;\r\n    const accessToken = currentUser?.accessToken;\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            let axiosJWT = createInstance(currentUser, dispatch, AuthSlice.actions.loginSuccess);\r\n            const result = await apiAuthService.getShopOrderDetail(id, accessToken, axiosJWT);\r\n            setResponse(result.orders[0]);\r\n            console.log(result.orders);\r\n        };\r\n        fetchApi();\r\n    }, []);\r\n    const handleFilter = (filter_name) => {\r\n        // console.log(filter_name);\r\n        if (filter_name == 'Tất cả') {\r\n            setFilter('all');\r\n        }\r\n        if (filter_name == 'Chưa thanh toán') {\r\n            setFilter('un-paid');\r\n        }\r\n        if (filter_name == 'Đã thanh toán') {\r\n            setFilter('paid');\r\n        }\r\n        if (filter_name == 'Hoàn thành') {\r\n            setFilter('completed');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <PageTitle>Chi tiết đơn hàng</PageTitle>\r\n\r\n            {/* Breadcum */}\r\n            <div className=\"flex text-gray-800 dark:text-gray-300\">\r\n                <div className=\"flex items-center text-orange-600\">\r\n                    <Icon className=\"w-5 h-5\" aria-hidden=\"true\" icon={HomeIcon} />\r\n                    <NavLink exact to=\"/dashboard\" className=\"mx-2\">\r\n                        Kênh người bán\r\n                    </NavLink>\r\n                </div>\r\n                {'>'}\r\n                <NavLink exact to=\"/orders\" className=\"mx-2  text-orange-600\">\r\n                    Đơn hàng\r\n                </NavLink>\r\n\r\n                {'>'}\r\n                <p className=\"mx-2\">Chi tiết đơn hàng</p>\r\n            </div>\r\n\r\n            {/* Sort */}\r\n            <Card className=\"mt-5 mb-5 shadow-md\">\r\n                <div className=\"bg-orange-300 p-4\">\r\n                    <div className=\"px-3 flex flex-col\">\r\n                        <span className=\"text-base font-bold leading-7 flex items-center \">\r\n                            <img className=\"w-6 h-6 mr-1\" src=\"https://img.icons8.com/windows/32/1A1A1A/calendar-week.png\" />\r\n                            {moment(response.dateCreated).format('LLL')}\r\n                        </span>\r\n                        <span className=\"text-sm font-normal leading-6 mx-4\">Order ID: {response.id}</span>\r\n                    </div>\r\n                </div>\r\n                <CardBody>\r\n                    {/* <div className=\"flex items-center\"> */}\r\n                    {/* <Label className=\"mx-3\"></Label> */}\r\n                    <div className=\"flex  w-full mb-12 mt-3 px-3\">\r\n                        <div className=\"w-2/6 flex\">\r\n                            <RoundIcon\r\n                                icon={PeopleIcon}\r\n                                iconColorClass=\"text-orange-500 dark:text-orange-100\"\r\n                                bgColorClass=\"bg-orange-100 dark:bg-orange-500\"\r\n                                className=\"mr-4 w-12 h-12 flex justify-center\"\r\n                            />\r\n                            <div className=\" flex flex-col\">\r\n                                <h6 className=\"text-base font-medium leading-5\">Người mua</h6>\r\n                                <p className=\"flex flex-col\">\r\n                                    <span className=\"text-base font-normal leading-6\">datko24</span>\r\n                                    <span className=\"text-base font-normal leading-6\">datko24@example.com</span>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"w-2/6 flex\">\r\n                            <RoundIcon\r\n                                icon={PeopleIcon}\r\n                                iconColorClass=\"text-green-500 dark:text-green-100\"\r\n                                bgColorClass=\"bg-green-100 dark:bg-green-500\"\r\n                                className=\"mr-4 w-12 h-12 flex justify-center\"\r\n                            />\r\n                            <div className=\" flex flex-col\">\r\n                                <h6 className=\"text-base font-medium leading-5\">Địa chỉ nhận hàng</h6>\r\n                                <p className=\"flex flex-col\">\r\n                                    <span className=\"text-base font-normal leading-6\">,{response.phoneNumber}</span>\r\n                                    <span className=\"text-base font-normal leading-6\">{response.address}</span>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"w-2/6 flex\">\r\n                            <RoundIcon\r\n                                icon={MoneyIcon}\r\n                                iconColorClass=\"text-teal-500 dark:text-teal-100\"\r\n                                bgColorClass=\"bg-teal-100 dark:bg-teal-500\"\r\n                                className=\"mr-4 w-12 h-12 flex justify-center\"\r\n                            />\r\n                            <div className=\" flex flex-col\">\r\n                                <h6 className=\"text-base font-medium leading-5\">Hình thức thanh toán</h6>\r\n                                <p className=\"flex flex-col\">\r\n                                    <span className=\"text-base font-normal leading-6\">{response.paymentName}</span>\r\n                                    <span className=\"text-base font-normal leading-6\">datko24@example.com</span>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* </div> */}\r\n                </CardBody>\r\n                <div className=\"mx-8\">\r\n                    <TableContainer className=\"mb-8\">\r\n                        <Table>\r\n                            <TableHeader>\r\n                                <tr>\r\n                                    <TableCell>Sản phẩm</TableCell>\r\n                                    <TableCell>Size</TableCell>\r\n                                    <TableCell>Số lượng</TableCell>\r\n                                    <TableCell>Đơn giá</TableCell>\r\n                                    <TableCell>Thành tiền</TableCell>\r\n                                </tr>\r\n                            </TableHeader>\r\n                            <TableBody>\r\n                                {response?.orderDetails?.map((order, i) => (\r\n                                    <TableRow key={i} className=\"mb-4\">\r\n                                        <TableCell>\r\n                                            <div className=\"flex items-center text-sm\">\r\n                                                <ProductIcon className=\"hidden mr-3 md:block\" src={order.itemImg} alt=\"User image\" />\r\n                                                <div>\r\n                                                    <p className=\"font-semibold\">{order.itemName}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </TableCell>\r\n\r\n                                        <TableCell>\r\n                                            <span className=\"text-sm\">{order.size}</span>\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <span className=\"text-sm\">X {order.quantity}</span>\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <span className=\"text-sm\">{order.price.toLocaleString('es-ES')} ₫</span>\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <span className=\"text-sm\">{(order.price * order.quantity).toLocaleString('es-ES')} ₫ </span>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n\r\n                                <TableRow>\r\n                                    <TableCell></TableCell>\r\n                                    <TableCell></TableCell>\r\n                                    <TableCell></TableCell>\r\n                                    <TableCell>\r\n                                        <div className=\"flex flex-col items-start \">\r\n                                            <span className=\"text-base font-normal leading-6\">Tổng tiền sản phẩm:</span>\r\n                                            <span className=\"text-base font-normal leading-6\">Phí vận chuyển:</span>\r\n                                            <span className=\"text-base font-normal leading-6\">Tổng tiền thanh toán:</span>\r\n                                            <span className=\"text-base font-normal leading-6 mt-4\">Trạng thái đơn hàng:</span>\r\n                                        </div>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <div className=\"flex flex-col w-48 items-end\">\r\n                                            <span className=\"text-base font-normal leading-6\">\r\n                                                ₫\r\n                                                {response?.orderDetails\r\n                                                    ?.reduce(function (total, order) {\r\n                                                        return total + order.price;\r\n                                                    }, 0)\r\n                                                    .toLocaleString('es-ES')}{' '}\r\n                                            </span>\r\n                                            <span className=\"text-base font-normal leading-6\">₫0</span>\r\n                                            <span className=\"text-base font-normal leading-6\">\r\n                                                ₫\r\n                                                {response?.orderDetails\r\n                                                    ?.reduce(function (total, order) {\r\n                                                        return total + order.price;\r\n                                                    }, 0)\r\n                                                    .toLocaleString('es-ES')}{' '}\r\n                                            </span>\r\n                                            <Badge\r\n                                                className=\"mt-4 w-24 h-14 flex items-center justify-center p-2\"\r\n                                                type={\r\n                                                    response.statusId === 4\r\n                                                        ? 'danger'\r\n                                                        : response.statusId === 3\r\n                                                        ? 'success'\r\n                                                        : response.statusId === 1\r\n                                                        ? 'warning'\r\n                                                        : 'primary'\r\n                                                }\r\n                                            >\r\n                                                {response.statusName}\r\n                                            </Badge>\r\n                                        </div>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Orders;\r\n","import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-4 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nfunction ProductIcon({ src, alt ,size='w-20 h-20'}) {\r\n    \r\n    return (\r\n        <>\r\n            <div className={`relative rounded-md inline-block ${size} hidden mr-4 md:block`}>\r\n                <img className=\"object-cover w-full h-full rounded-md\" src={src} alt={alt} loading=\"lazy\" />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductIcon;\r\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    TableBody,\r\n    TableContainer,\r\n    Table,\r\n    TableHeader,\r\n    TableCell,\r\n    TableRow,\r\n    TableFooter,\r\n    Button,\r\n    Avatar,\r\n    Badge,\r\n    Pagination,\r\n} from '@windmill/react-ui';\r\nimport { EyeIcon } from '../icons';\r\nimport ordersData from '../utils/demo/ordersData';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport ProductIcon from './ProductIcon';\r\nimport * as apiAuthService from '../services/authService';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authRemainingSelector } from '../redux/selector';\r\nimport { createInstance } from '../services/createInstance';\r\nimport moment from 'moment/moment';\r\nimport AuthSlice from '../redux/AuthSlice';\r\nconst OrdersTable = ({ resultsPerPage, filter, path }) => {\r\n    const [page, setPage] = useState(1);\r\n    const [data, setData] = useState([]);\r\n    const [response, setResponse] = useState([]);\r\n    // pagination setup\r\n\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(authRemainingSelector);\r\n    const currentUser = user?.login.currentUser;\r\n    const accessToken = currentUser?.accessToken;\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            let axiosJWT = createInstance(currentUser, dispatch, AuthSlice.actions.loginSuccess);\r\n            const result = await apiAuthService.getShopOrder(accessToken, axiosJWT);\r\n            setResponse(result);\r\n            \r\n        };\r\n        fetchApi();\r\n    }, []);\r\n\r\n    // pagination change control\r\n    function onPageChange(p) {\r\n        setPage(p);\r\n    }\r\n\r\n    // on page change, load new sliced data\r\n    // here you would make another server request for new data\r\n    useEffect(() => {\r\n        if (filter === 'Tất cả' || !filter) {\r\n            setData(response?.slice((page - 1) * resultsPerPage, page * resultsPerPage));\r\n        }\r\n        if (filter === 'Chờ xác nhận') {\r\n            setData(response?.filter((order) => order.statusId === 1).slice((page - 1) * resultsPerPage, page * resultsPerPage));\r\n        }\r\n        if (filter === 'Đang giao') {\r\n            setData(response?.filter((order) => order.statusId === 2).slice((page - 1) * resultsPerPage, page * resultsPerPage));\r\n        }\r\n        if (filter === 'Đã giao') {\r\n            setData(response?.filter((order) => order.statusId === 3).slice((page - 1) * resultsPerPage, page * resultsPerPage));\r\n        }\r\n        if (filter === 'Đã huỷ') {\r\n            setData(response?.filter((order) => order.statusId === 4).slice((page - 1) * resultsPerPage, page * resultsPerPage));\r\n        }\r\n    }, [page, resultsPerPage, filter,response]);\r\n\r\n    const handleStatus = (status, id) => {\r\n        switch (status) {\r\n            case 1:\r\n                return (\r\n                    <>\r\n                        <span\r\n                            onClick={() => handleOrder(id, 2)}\r\n                            className=\"my-2 font-medium cursor-pointer leading-3 text-blue-500 hover:text-blue-700\"\r\n                            aria-label=\"Preview\"\r\n                        >\r\n                            Xác nhận\r\n                        </span>\r\n                        <span\r\n                            onClick={() => handleOrder(id, 4)}\r\n                            className=\"my-2 font-medium cursor-pointer leading-3 text-blue-500 hover:text-blue-700\"\r\n                            aria-label=\"Preview\"\r\n                        >\r\n                            Huỷ\r\n                        </span>\r\n                    </>\r\n                );\r\n            // case 2:\r\n            //     return (\r\n            //         <span\r\n            //             onClick={() => handleOrder(id, 4)}\r\n            //             className=\"my-2 font-medium cursor-pointer leading-3 text-blue-500 hover:text-blue-700\"\r\n            //             aria-label=\"Preview\"\r\n            //         >\r\n            //             Huỷ\r\n            //         </span>\r\n            //     );\r\n            default:\r\n                return '';\r\n        }\r\n    };\r\n    const handleOrder = (purchaseId, status) => {\r\n        const fetchApi = async () => {\r\n            let axiosJWT = createInstance(currentUser, dispatch, AuthSlice.actions.loginSuccess);\r\n            let result;\r\n            if (status == 2) {\r\n                result = await apiAuthService.updateOrder(\r\n                    purchaseId,\r\n                    {\r\n                        StatusId: status,\r\n                    },\r\n                    accessToken,\r\n                    axiosJWT,\r\n                );\r\n                setResponse(result);\r\n                \r\n\r\n                // setFilterPurchases(result);\r\n            } else {\r\n                result = await apiAuthService.cancelOrder(purchaseId, accessToken, axiosJWT);\r\n                setResponse(result);\r\n                \r\n\r\n                // setFilterPurchases(result);\r\n            }\r\n        };\r\n        fetchApi();\r\n    };\r\n    return (\r\n        <div>\r\n            {/* Table */}\r\n            <TableContainer className=\"mb-8\">\r\n                <Table>\r\n                    <TableHeader>\r\n                        <tr>\r\n                            <TableCell>Sản phẩm</TableCell>\r\n                            <TableCell>Số lượng</TableCell>\r\n                            <TableCell>Tổng Đơn hàng</TableCell>\r\n                            <TableCell>Trạng thái </TableCell>\r\n                            <TableCell>Ngày đặt đơn</TableCell>\r\n                            <TableCell>Thao tác</TableCell>\r\n                        </tr>\r\n                    </TableHeader>\r\n                    <TableBody>\r\n                        {data?.map((order, i) => (\r\n                            <>\r\n                                <TableRow key={i} className=\"mb-4\">\r\n                                    <TableCell>\r\n                                        {/* <TableHeader> */}\r\n                                        <div className=\"flex flex-end p-4\"> Mã đơn hàng: {order.billId} </div>\r\n                                        {/* </TableHeader> */}\r\n                                        <div className=\"flex items-center text-sm\">\r\n                                            <ProductIcon\r\n                                                className=\"hidden mr-3 md:block\"\r\n                                                src={order.orderDetails[0]?.itemImg}\r\n                                                alt=\"User image\"\r\n                                            />\r\n                                            <div>\r\n                                                <p className=\"font-semibold\">{order.orderDetails[0]?.itemName}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </TableCell>\r\n\r\n                                    <TableCell>\r\n                                        <span className=\"text-sm\">X {order.orderDetails[0]?.quantity}</span>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <span className=\"text-sm\">\r\n                                            {order.orderDetails\r\n                                                .reduce(function (total, order) {\r\n                                                    return total + order.price;\r\n                                                }, 0)\r\n                                                .toLocaleString('es-ES')}{' '}\r\n                                            ₫\r\n                                        </span>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Badge\r\n                                            type={\r\n                                                order.statusId === 4\r\n                                                    ? 'danger'\r\n                                                    : order.statusId === 3\r\n                                                    ? 'success'\r\n                                                    : order.statusId === 1\r\n                                                    ? 'warning'\r\n                                                :\"primary\"\r\n                                            }\r\n                                        >\r\n                                            {order.statusName}\r\n                                        </Badge>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <span className=\"text-sm\">{moment(data.dateCreated).format('L')}</span>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <div className=\"flex flex-col  justify-between\">\r\n                                            <Link to={`/orders/${order.id}`}>\r\n                                                <span\r\n                                                    className=\"my-2 font-medium leading-3 text-blue-500 hover:text-blue-700\"\r\n                                                    aria-label=\"Preview\"\r\n                                                >\r\n                                                    Xem chi tiết\r\n                                                </span>\r\n                                            </Link>\r\n                                            {handleStatus(order.statusId, order.id)}\r\n                                        </div>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                {order.orderDetails.splice(1,order.orderDetails.length).map((orderDetails, i) => (\r\n                                    <TableRow key={i}>\r\n                                        <TableCell>\r\n                                            <div className=\"flex items-center text-sm\">\r\n                                                <ProductIcon className=\"hidden mr-3 md:block\" src={orderDetails.itemImg} alt=\"User image\" />\r\n                                                <div>\r\n                                                    <p className=\"font-semibold\">{orderDetails.itemName}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </TableCell>\r\n                                        <TableCell>X {orderDetails.quantity}</TableCell>\r\n                                        <TableCell>\r\n                                            {/* <span className=\"text-sm\">{orderDetails.price.toLocaleString('es-ES')} ₫</span> */}\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            {/* <Badge\r\n                                                type={\r\n                                                    orderDetails.status === 'Un-paid'\r\n                                                        ? 'danger'\r\n                                                        : orderDetails.status === 'Paid'\r\n                                                        ? 'success'\r\n                                                        : orderDetails.status === 'Completed'\r\n                                                        ? 'warning'\r\n                                                        : 'neutral'\r\n                                                }\r\n                                            >\r\n                                                {orderDetails.status}\r\n                                            </Badge> */}\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            {/* <span className=\"text-sm\">{moment(data.dateCreated).format('MMMM Do YYYY')}</span> */}\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            {/* <div className=\"flex flex-col  justify-between\">\r\n                                                <Link to={`/ordersDetail`}>\r\n                                                    <span\r\n                                                        className=\"my-2 font-medium leading-3 text-blue-500 hover:text-blue-700\"\r\n                                                        aria-label=\"Preview\"\r\n                                                    >\r\n                                                        Xem chi tiết\r\n                                                    </span>\r\n                                                </Link>\r\n                                                {handleStatus(data.statusId)}\r\n                                                <span icon={EyeIcon} className=\"my-2\" aria-label=\"Preview\">Đang giao</span>\r\n                                            </div> */}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </>\r\n                        ))}\r\n                    </TableBody>\r\n                    <TableFooter>\r\n                        <Pagination\r\n                            totalResults={response?.length}\r\n                            resultsPerPage={resultsPerPage}\r\n                            label=\"Table navigation\"\r\n                            onChange={onPageChange}\r\n                        />\r\n                    </TableFooter>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrdersTable;\r\n"],"sourceRoot":""}