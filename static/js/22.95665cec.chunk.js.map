{"version":3,"sources":["pages/Product/AddProduct.js","components/Typography/PageTitle.js","components/Icon.js","services/imageService.js"],"names":["FormTitle","children","className","AddProduct","useState","isModalOpen","setIsModalOpen","productId","a","closeModal","categoriesResult","setCategoriesResult","useEffect","apiService","result","fetchApi","selected","setSelected","categories2","setCategories2","fetchApi2","id","data","categories","images","setImages","imageURLS","setImageURLs","pathURLS","setPathURLs","length","newImageUrls","AddProductForm","values","Paths","forEach","image","push","URL","createObjectURL","isValidFileUploaded","file","fileExtension","type","split","includes","inputFile","useRef","dispatch","useDispatch","user","useSelector","authRemainingSelector","history","useHistory","currentUser","login","accessToken","errorResponse","setErrorResponse","useFormik","initialValues","CategoryId","Name","Price","Description","Size","validationSchema","Yup","required","onSubmit","newProduct","console","log","errors","axiosJWT","createInstance","AuthSlice","actions","loginSuccess","addProduct","res","aria-hidden","icon","HomeIcon","exact","to","isOpen","onClose","style","width","map","i","key","onClick","name","RightArrow","fetchApi3","block","layout","handleSubmit","imageSrc","src","alt","current","click","multiple","onChange","e","check","files","target","UploadImage","concat","alert","ref","viewBox","xmlns","d","value","handleChange","placeholder","openModal","readOnly","rows","size","iconLeft","AddIcon","PageTitle","Icon","props","Upload","FormData","append","fetch","method","body","json","prev","secure_url"],"mappings":"4TAgBMA,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjB,OAAO,wBAAIC,UAAU,+DAA+DD,IA2UzEE,UAxUI,WAAO,IAAD,EACrB,EAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA0DF,mBAAS,MAAnE,6BAFqB,4CAGrB,WAAyBG,GAAzB,SAAAC,EAAA,sDAIIF,GAAe,GAJnB,4CAHqB,sBASrB,SAASG,IACLH,GAAe,GAGnB,MAAgDF,mBAAS,IAAzD,mBAAOM,EAAP,KAAyBC,EAAzB,KACAC,qBAAU,YACQ,uCAAG,4BAAAJ,EAAA,sEACQK,MADR,OACPC,EADO,OAEbH,EAAoBG,GAFP,2CAAH,qDAIdC,KACD,IAEH,MAAgCX,qBAAhC,mBAAOY,EAAP,KAAiBC,EAAjB,KACA,EAAsCb,mBAAS,IAA/C,mBAAOc,EAAP,KAAoBC,EAApB,KACMC,EAAS,uCAAG,WAAON,GAAP,eAAAN,EAAA,sEACKK,IAA0BC,EAAOO,IADtC,OACRC,EADQ,OAIdH,EAAeG,EAAKC,YAJN,2CAAH,sDAWf,EAA4BnB,mBAAS,IAArC,mBAAOoB,EAAP,KAAeC,EAAf,KACA,EAAkCrB,mBAAS,IAA3C,mBAAOsB,EAAP,KAAkBC,EAAlB,KACA,EAAgCvB,mBAAS,IAAzC,mBAAOwB,GAAP,KAAiBC,GAAjB,KACAjB,qBAAU,WACN,KAAIY,EAAOM,OAAS,GAApB,CACA,IAAMC,EAAe,GAErBC,GAAeC,OAAOC,MAAQV,EAE9BA,EAAOW,SAAQ,SAACC,GAAD,OAAWL,EAAaM,KAAKC,IAAIC,gBAAgBH,OAChET,EAAaI,MACd,CAACP,IACJ,IAAMgB,GAAsB,SAACC,GACzB,IACMC,EAAgBD,EAAKE,KAAKC,MAAM,KAAK,GAE3C,MAHwB,CAAC,MAAO,OAAQ,OAGjBC,SAASH,IA2BpC,IAAMI,GAAYC,iBAAO,MAKnBC,GAAWC,cACXC,GAAOC,YAAYC,KACnBC,GAAUC,cAEVC,GAAW,OAAGL,SAAH,IAAGA,QAAH,EAAGA,GAAMM,MAAMD,YAC1BE,GAAW,OAAGF,SAAH,IAAGA,QAAH,EAAGA,GAAaE,YAEjC,GAA0CrD,mBAAS,IAAnD,qBAAOsD,GAAP,MAAsBC,GAAtB,MACM3B,GAAiB4B,YAAU,CAC7BC,cAAe,CACXC,WAAY,KACZC,KAAM,GACNC,MAAO,KACPC,YAAa,GACbC,KAAM,GACNhC,MAAO,IAGXiC,iBAAkBC,IAAW,CACzBN,WAAYM,MAAaC,SAAS,uBAClCN,KAAMK,MAAaC,SAAS,uBAC5BL,MAAOI,MAAaC,SAAS,uBAC7BJ,YAAaG,MAAaC,SAAS,uBACnCH,KAAME,MAAaC,SAAS,uBAC5BnC,MAAOkC,MAAYC,SAAS,yBAGhCC,SAAU,SAACrC,GACP,IAAMsC,EAAa,CACfT,WAAY7B,EAAO6B,WAAWzC,GAC9B0C,KAAM9B,EAAO8B,KACbC,MAAO/B,EAAO+B,MACdC,YAAahC,EAAOgC,YACpBC,KAAMjC,EAAOiC,KACbhC,MAAON,IAGX4C,QAAQC,IAAI,SAAUF,GACtBC,QAAQC,IAAIzC,GAAe0C,QAC3B,IAAIC,EAAWC,YAAerB,GAAaP,GAAU6B,IAAUC,QAAQC,eACzD,uCAAG,4BAAAvE,EAAA,sEACKwE,YAAWT,EAAYlB,GAASI,GAAakB,GADlD,OACPM,EADO,OAEbtB,GAAiBsB,GACjBT,QAAQC,IAAIQ,GAHC,2CAAH,qDAKdlE,MAGR,OACI,6BACI,kBAAC,IAAD,4CACA,kBAAC,IAAD,KAAY2C,IAGZ,yBAAKxD,UAAU,yCACX,yBAAKA,UAAU,qCACX,kBAAC,IAAD,CAAMA,UAAU,UAAUgF,cAAY,OAAOC,KAAMC,aACnD,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAG,aAAapF,UAAU,QAAzC,mCAIH,IACD,uBAAGA,UAAU,QAAb,wCAGJ,yBAAKA,UAAU,mDACX,kBAAC,QAAD,CAAOqF,OAAQlF,EAAamF,QAAS/E,EAAYgF,MAAO,CAAEC,MAAO,WAC7D,kBAAC,cAAD,CAAaxF,UAAU,uBAAvB,wCAMA,kBAAC,YAAD,CAAWA,UAAU,sBAGjB,yBAAKA,UAAU,gDACX,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,oCACX,wBAAIA,UAAU,gBACTQ,EAAiBiF,KAAI,SAAC7E,EAAQ8E,GAAT,OAClB,wBACIC,IAAK/E,EAAOO,GACZnB,UAAU,0EACV4F,QAAS,kBAAM1E,EAAUN,KAEzB,uBAAGZ,UAAU,iDAAiDY,EAAOiF,MACrE,yBAAK7F,UAAU,qBACX,kBAAC,IAAD,CAAMA,UAAU,UAAUgF,cAAY,OAAOC,KAAMa,qBAKnE,wBAAI9F,UAAU,gBAAd,OACKgB,QADL,IACKA,OADL,EACKA,EAAayE,KAAI,SAAC7E,EAAQ8E,GAAT,OACd,wBACIC,IAAK/E,EAAOO,GACZnB,UAAU,0EACV4F,QAAS,kBAxJvC,SAAChF,GACfG,EAAYH,GACZkB,GAAeC,OAAO6B,WAAahD,EAsJwBmF,CAAUnF,KAEzB,uBAAGZ,UAAU,iDAAiDY,EAAOiF,gBASrG,kBAAC,cAAD,KACI,yBAAK7F,UAAU,+BACX,yBAAKA,UAAU,aACX,0BAAMA,UAAU,QAAhB,0BACA,0BAAMA,UAAU,QAAhB,OAAwBc,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAU+E,OAEtC,yBAAK7F,UAAU,QACX,yBAAKA,UAAU,SACX,kBAAC,SAAD,CAAQgG,OAAK,EAACC,OAAO,UAAUL,QAASrF,GAAxC,aAIJ,yBAAKP,UAAU,wBACX,kBAAC,SAAD,CAAQ4F,QAASrF,GAAjB,yBAOpB,kBAAC,OAAD,CAAMP,UAAU,6BACZ,0BAAMoE,SAAUtC,GAAeoE,cAC3B,kBAAC,WAAD,KACI,kBAACpG,EAAD,4CACA,yBAAKE,UAAU,yBACVwB,EAAUiE,KAAI,SAACU,EAAUT,GAAX,OACX,yBAAKC,IAAKD,EAAG1F,UAAU,+BACnB,yBAAKA,UAAU,kBACX,yBAAKoG,IAAKD,EAAUE,IAAI,YAAYrG,UAAU,mCAK1D,yBAAKA,UAAU,kDACX,yBACI4F,QArJjB,WACfhD,GAAU0D,QAAQC,SAqJcvG,UAAU,qGAEV,2BACImB,GAAG,QACH0E,KAAK,QAELpD,KAAK,OACL+D,UAAU,EACVxG,UAAU,SACVyG,SAzLxC,SAAuBC,GACnB,IAIIC,EAJEC,EAAQF,EAAEG,OAAOD,MACvBtC,QAAQC,IAAIqC,GACZE,YAAYF,EAAOjF,IAGnB,IAAK,IAAI+D,EAAI,EAAGA,EAAIgB,EAAEG,OAAOD,MAAMhF,OAAQ8D,IAAK,CAC5C,IAAIpD,GAAoBsE,EAAMlB,IAEvB,CACHiB,GAAQ,EACR,MAHAA,GAAQ,EAMhB,GAAIC,EAAMhF,OAAS,GAAK+E,EACpB,GAAIrF,EAAOyF,OAAP,YAAkBL,EAAEG,OAAOD,QAAQhF,QAAU,EAAG,CAChD,IAAMR,EAAOE,EAAOyF,OAAP,YAAkBL,EAAEG,OAAOD,QACxCrF,EAAUH,QAEV4F,MAAM,qCAGVA,MAAM,iBAoK0BC,IAAKrE,KAET,yBAAK5C,UAAU,oCACX,yBAAKA,UAAU,OACX,uBAAGA,UAAU,qCACT,yBAAKkH,QAAQ,YAAYC,MAAM,8BAC3B,0BAAMC,EAAE,gSACR,0BAAMA,EAAE,mLAIpB,yBAAKpH,UAAU,qBAAf,6BAAmDwB,EAAUI,OAA7D,WAKhB,kBAAC9B,EAAD,kCACA,kBAAC,QAAD,KACI,kBAAC,QAAD,CACIqB,GAAG,OACH0E,KAAK,OACLwB,MAAOvF,GAAeC,OAAO8B,KAC7B4C,SAAU3E,GAAewF,aACzBtH,UAAU,OACVuH,YAAY,sBAGpB,kBAACzH,EAAD,sBACA,kBAAC,QAAD,KACI,kBAAC,QAAD,CACIqB,GAAG,aACH0E,KAAK,aACLwB,MAAK,UAAEvF,GAAeC,OAAO6B,kBAAxB,aAAE,EAAkCiC,KACzCY,SAAU3E,GAAewF,aAEzB1B,QAAS,kBAlRpB,2CAkR0B4B,CAAU,MACzBxH,UAAU,OACVuH,YAAY,0BACZE,UAAQ,KAGhB,kBAAC3H,EAAD,aACA,kBAAC,QAAD,KACI,kBAAC,QAAD,CACIqB,GAAG,OACH0E,KAAK,OACLwB,MAAOvF,GAAeC,OAAOiC,KAC7ByC,SAAU3E,GAAewF,aACzBtH,UAAU,OACVuH,YAAY,oBAGpB,kBAACzH,EAAD,yCACA,kBAAC,QAAD,KACI,kBAAC,WAAD,CACIqB,GAAG,cACH0E,KAAK,cACLwB,MAAOvF,GAAeC,OAAOgC,YAC7B0C,SAAU3E,GAAewF,aACzBtH,UAAU,OACV0H,KAAK,OAGb,kBAAC5H,EAAD,eACA,kBAAC,QAAD,KACI,kBAAC,QAAD,CACIqB,GAAG,QACH0E,KAAK,QACLwB,MAAOvF,GAAeC,OAAO+B,MAC7B2C,SAAU3E,GAAewF,aACzB7E,KAAK,SACLzC,UAAU,QACVuH,YAAY,sBAIpB,yBAAKvH,UAAU,UACX,kBAAC,SAAD,CAAQyC,KAAK,SAASkF,KAAK,QAAQC,SAAUC,WAA7C,sC,gCChVhC,oBAQeC,IANf,YAAkC,IAAb/H,EAAY,EAAZA,SACnB,OACE,wBAAIC,UAAU,gEAAgED,K,uECGnEgI,IALF,YAAyB,IAAtB9C,EAAqB,EAArBA,KAAS+C,EAAY,iBAC7BD,EAAO9C,EACb,OAAO,kBAAC8C,EAASC,K,qECgBJlB,IApBf,SAAqBF,EAAMnF,GAcvB,IAbA,IAAMwG,EAAM,uCAAG,WAAO1F,GAAP,mBAAAjC,EAAA,6DACLc,EAAO,IAAI8G,UACZC,OAAO,OAAQ5F,GACpBnB,EAAK+G,OAAO,gBAAiB,WAHlB,SAIOC,MAAM,mEAAoE,CACxFC,OAAQ,OACRC,KAAMlH,IANC,cAIL2D,EAJK,gBAQSA,EAAIwD,OARb,OAQL3B,EARK,OASXnF,GAAa,SAAA+G,GACT,MAAM,GAAN,mBAAWA,GAAX,CAAgB5B,EAAM6B,gBAVf,4CAAH,sDAaH/C,EAAI,EAAGA,EAAIkB,EAAMhF,OAAQ8D,IAC9BuC,EAAOrB,EAAMlB","file":"static/js/22.95665cec.chunk.js","sourcesContent":["import React from 'react';\r\nimport PageTitle from '../../components/Typography/PageTitle';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport Icon from '../../components/Icon';\r\nimport { HomeIcon, AddIcon, PublishIcon, TrashIcon, RightArrow, StoreIcon } from '../../icons';\r\nimport { Card, CardBody, Label, Input, Textarea, Button, Select, Modal, ModalHeader, ModalBody, ModalFooter } from '@windmill/react-ui';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport * as apiService from '../../services/apiService';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport UploadImage from '../../services/imageService';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authRemainingSelector } from '../../redux/selector';\r\nimport { createInstance } from '../../services/createInstance';\r\nimport AuthSlice from '../../redux/AuthSlice';\r\nimport { addProduct, logOutUser } from '../../services/authService';\r\nconst FormTitle = ({ children }) => {\r\n    return <h2 className=\"mb-3 text-sm font-semibold text-gray-600 dark:text-gray-300\">{children}</h2>;\r\n};\r\n\r\nconst AddProduct = () => {\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [selectedDeleteProduct, setSelectedDeleteProduct] = useState(null);\r\n    async function openModal(productId) {\r\n        // let product = await data.filter((product) => product.id === productId)[0];\r\n        // console.log(product);\r\n        // setSelectedDeleteProduct(product);\r\n        setIsModalOpen(true);\r\n    }\r\n    function closeModal() {\r\n        setIsModalOpen(false);\r\n    }\r\n\r\n    const [categoriesResult, setCategoriesResult] = useState([]);\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            const result = await apiService.allCategories();\r\n            setCategoriesResult(result);\r\n        };\r\n        fetchApi();\r\n    }, []);\r\n\r\n    const [selected, setSelected] = useState();\r\n    const [categories2, setCategories2] = useState([]);\r\n    const fetchApi2 = async (result) => {\r\n        const data = await apiService.categoriesById(result.id);\r\n        // setSelected(result);\r\n        // AddProductForm.values.CategoryId = result;\r\n        setCategories2(data.categories);\r\n    };\r\n    const fetchApi3 = (result) => {\r\n        setSelected(result);\r\n        AddProductForm.values.CategoryId = result;\r\n    };\r\n\r\n    const [images, setImages] = useState([]);\r\n    const [imageURLS, setImageURLs] = useState([]);\r\n    const [pathURLS, setPathURLs] = useState([]);\r\n    useEffect(() => {\r\n        if (images.length < 1) return;\r\n        const newImageUrls = [];\r\n\r\n        AddProductForm.values.Paths = images;\r\n\r\n        images.forEach((image) => newImageUrls.push(URL.createObjectURL(image)));\r\n        setImageURLs(newImageUrls);\r\n    }, [images]);\r\n    const isValidFileUploaded = (file) => {\r\n        const validExtensions = ['png', 'jpeg', 'jpg'];\r\n        const fileExtension = file.type.split('/')[1];\r\n\r\n        return validExtensions.includes(fileExtension);\r\n    };\r\n    function onImageChange(e) {\r\n        const files = e.target.files;\r\n        console.log(files)\r\n        UploadImage(files, setPathURLs);\r\n\r\n        let check;\r\n        for (let i = 0; i < e.target.files.length; i++) {\r\n            if (isValidFileUploaded(files[i])) {\r\n                check = true;\r\n            } else {\r\n                check = false;\r\n                break;\r\n            }\r\n        }\r\n        if (files.length < 9 && check) {\r\n            if (images.concat([...e.target.files]).length <= 9) {\r\n                const data = images.concat([...e.target.files]);\r\n                setImages(data);\r\n            } else {\r\n                alert('Over the allowed file amount');\r\n            }\r\n        } else {\r\n            alert('File invalid');\r\n        }\r\n    }\r\n    const inputFile = useRef(null);\r\n    const onDivClick = () => {\r\n        inputFile.current.click();\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(authRemainingSelector);\r\n    const history = useHistory();\r\n\r\n    const currentUser = user?.login.currentUser;\r\n    const accessToken = currentUser?.accessToken;\r\n\r\n    const [errorResponse, setErrorResponse] = useState('');\r\n    const AddProductForm = useFormik({\r\n        initialValues: {\r\n            CategoryId: null,\r\n            Name: '',\r\n            Price: null,\r\n            Description: '',\r\n            Size: '',\r\n            Paths: [],\r\n            // Quantity: null,\r\n        },\r\n        validationSchema: Yup.object({\r\n            CategoryId: Yup.object().required('Bắt buộc!'),\r\n            Name: Yup.string().required('Bắt buộc!'),\r\n            Price: Yup.number().required('Bắt buộc!'),\r\n            Description: Yup.string().required('Bắt buộc!'),\r\n            Size: Yup.string().required('Bắt buộc!'),\r\n            Paths: Yup.array().required('Bắt buộc!'),\r\n            // Quantity: Yup.string().required('Bắt buộc!'),\r\n        }),\r\n        onSubmit: (values) => {\r\n            const newProduct = {\r\n                CategoryId: values.CategoryId.id,\r\n                Name: values.Name,\r\n                Price: values.Price,\r\n                Description: values.Description,\r\n                Size: values.Size,\r\n                Paths: pathURLS,\r\n                // Quantity: null,\r\n            };\r\n            console.log('submit', newProduct);\r\n            console.log(AddProductForm.errors);\r\n            let axiosJWT = createInstance(currentUser, dispatch, AuthSlice.actions.loginSuccess);\r\n            const fetchApi = async () => {\r\n                const res = await addProduct(newProduct, history, accessToken, axiosJWT);\r\n                setErrorResponse(res);\r\n                console.log(res);\r\n            };\r\n            fetchApi();\r\n        },\r\n    });\r\n    return (\r\n        <div>\r\n            <PageTitle>Thêm Mới Sản Phẩm</PageTitle>\r\n            <PageTitle>{errorResponse}</PageTitle>\r\n\r\n            {/* Breadcum */}\r\n            <div className=\"flex text-gray-800 dark:text-gray-300\">\r\n                <div className=\"flex items-center text-orange-600\">\r\n                    <Icon className=\"w-5 h-5\" aria-hidden=\"true\" icon={HomeIcon} />\r\n                    <NavLink exact to=\"/dashboard\" className=\"mx-2\">\r\n                        Kênh người bán\r\n                    </NavLink>\r\n                </div>\r\n                {'>'}\r\n                <p className=\"mx-2\">Thêm Mới Sản Phẩm</p>\r\n            </div>\r\n\r\n            <div className=\"w-full mt-8 grid gap-4 grid-col md:grid-cols-3 \">\r\n                <Modal isOpen={isModalOpen} onClose={closeModal} style={{ width: '1000px' }}>\r\n                    <ModalHeader className=\"flex mb-8 text-3xl \">\r\n                        {/* <div className=\"flex items-center\"> */}\r\n                        {/* <Icon icon={TrashIcon} className=\"w-6 h-6 mr-3\" /> */}\r\n                        Chỉnh sửa ngành hàng\r\n                        {/* </div> */}\r\n                    </ModalHeader>\r\n                    <ModalBody className=\"max-w-7xl max-h-96\">\r\n                        {/* Hãy chắc chắn rằng bạn muốn xóa sản phẩm{\" \"}\r\n            {selectedDeleteProduct && `\"${selectedDeleteProduct.name}\"`} */}\r\n                        <div className=\"flex-grow min-h-8 overflow-auto text-sm px-6\">\r\n                            <div className=\"rounded p-4 bg-gray-100\">\r\n                                <div className=\"relative overflow-hidden  rounded\">\r\n                                    <div className=\"py-3 relative w-96 flex bg-white\">\r\n                                        <ul className=\" h-80 flex-1\">\r\n                                            {categoriesResult.map((result, i) => (\r\n                                                <li\r\n                                                    key={result.id}\r\n                                                    className=\"my-2 flex justify-between leading-8 items-center px-4 hover:bg-gray-100\"\r\n                                                    onClick={() => fetchApi2(result)}\r\n                                                >\r\n                                                    <p className=\"text-sm font-semibold leading-8 text-ellipsis\">{result.name}</p>\r\n                                                    <div className=\"flex item-center \">\r\n                                                        <Icon className=\"w-5 h-5\" aria-hidden=\"true\" icon={RightArrow} />\r\n                                                    </div>\r\n                                                </li>\r\n                                            ))}\r\n                                        </ul>\r\n                                        <ul className=\" h-80 flex-1\">\r\n                                            {categories2?.map((result, i) => (\r\n                                                <li\r\n                                                    key={result.id}\r\n                                                    className=\"my-2 flex justify-between leading-8 items-center px-4 hover:bg-gray-100\"\r\n                                                    onClick={() => fetchApi3(result)}\r\n                                                >\r\n                                                    <p className=\"text-sm font-semibold leading-8 text-ellipsis\">{result.name}</p>\r\n                                                </li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <div className=\"w-full flex justify-between\">\r\n                            <div className=\"leading-5\">\r\n                                <span className=\"mr-1\">Đã chọn :</span>\r\n                                <span className=\"ml-1\">{selected?.name}</span>\r\n                            </div>\r\n                            <div className=\"flex\">\r\n                                <div className=\"ml-4 \">\r\n                                    <Button block layout=\"outline\" onClick={closeModal}>\r\n                                        HUỷ\r\n                                    </Button>\r\n                                </div>\r\n                                <div className=\"ml-4 hidden sm:block\">\r\n                                    <Button onClick={closeModal}>Xác nhận</Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n                <Card className=\"row-span-4 md:col-span-4 \">\r\n                    <form onSubmit={AddProductForm.handleSubmit}>\r\n                        <CardBody>\r\n                            <FormTitle>Hình ảnh sản phẩm</FormTitle>\r\n                            <div className=\"w-full flex flex-wrap\">\r\n                                {imageURLS.map((imageSrc, i) => (\r\n                                    <div key={i} className=\"w-20 h-20 rounded mr-4 mb-4\">\r\n                                        <div className=\"w-full h-full \">\r\n                                            <img src={imageSrc} alt=\"not fount\" className=\"w-20 h-20 rounded border \" />\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n\r\n                                <div className=\"w-20 h-20 rounded mr-4 mb-4  text-center  flex\">\r\n                                    <div\r\n                                        onClick={onDivClick}\r\n                                        className=\"w-full h-full rounded border border-dashed border-slate-600 flex items-center hover:bg-orange-100\"\r\n                                    >\r\n                                        <input\r\n                                            id=\"Paths\"\r\n                                            name=\"Paths\"\r\n                                            // value={AddProductForm.values.Paths}\r\n                                            type=\"file\"\r\n                                            multiple={true}\r\n                                            className=\"hidden\"\r\n                                            onChange={onImageChange}\r\n                                            ref={inputFile}\r\n                                        />\r\n                                        <div className=\"flex text-orange-600 flex-col   \">\r\n                                            <div className=\"h-6\">\r\n                                                <i className=\"w-6 h-6 inline-block fill-current\">\r\n                                                    <svg viewBox=\"0 0 23 21\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                        <path d=\"M18.5 0A1.5 1.5 0 0 1 20 1.5V12c-.49-.07-1.01-.07-1.5 0V1.5H2v12.65l3.395-3.408a.75.75 0 0 1 .958-.087l.104.087L7.89 12.18l3.687-5.21a.75.75 0 0 1 .96-.086l.103.087 3.391 3.405c.81.813.433 2.28-.398 3.07A5.235 5.235 0 0 0 14.053 18H2a1.5 1.5 0 0 1-1.5-1.5v-15A1.5 1.5 0 0 1 2 0h16.5z\"></path>\r\n                                                        <path d=\"M6.5 4.5a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3zM18.5 14.25a.75.75 0 0 1 1.5 0v2.25h2.25a.75.75 0 0 1 0 1.5H20v2.25a.75.75 0 0 1-1.5 0V18h-2.25a.75.75 0 0 1 0-1.5h2.25v-2.25z\"></path>\r\n                                                    </svg>\r\n                                                </i>\r\n                                            </div>\r\n                                            <div className=\"leading-3 text-xs\">Thêm hình ảnh ({imageURLS.length}/9)</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <FormTitle>Tên sản phẩm</FormTitle>\r\n                            <Label>\r\n                                <Input\r\n                                    id=\"Name\"\r\n                                    name=\"Name\"\r\n                                    value={AddProductForm.values.Name}\r\n                                    onChange={AddProductForm.handleChange}\r\n                                    className=\"mb-4\"\r\n                                    placeholder=\"Nhập vào\"\r\n                                />\r\n                            </Label>\r\n                            <FormTitle>Danh mục</FormTitle>\r\n                            <Label>\r\n                                <Input\r\n                                    id=\"CategoryId\"\r\n                                    name=\"CategoryId\"\r\n                                    value={AddProductForm.values.CategoryId?.name}\r\n                                    onChange={AddProductForm.handleChange}\r\n                                    // value={selected?.name}\r\n                                    onClick={() => openModal('1')}\r\n                                    className=\"mb-4\"\r\n                                    placeholder=\"Chọn danh mục\"\r\n                                    readOnly\r\n                                />\r\n                            </Label>\r\n                            <FormTitle>Size</FormTitle>\r\n                            <Label>\r\n                                <Input\r\n                                    id=\"Size\"\r\n                                    name=\"Size\"\r\n                                    value={AddProductForm.values.Size}\r\n                                    onChange={AddProductForm.handleChange}\r\n                                    className=\"mb-4\"\r\n                                    placeholder=\"Nhập size\"\r\n                                />\r\n                            </Label>\r\n                            <FormTitle>Mô tả sản phẩm</FormTitle>\r\n                            <Label>\r\n                                <Textarea\r\n                                    id=\"Description\"\r\n                                    name=\"Description\"\r\n                                    value={AddProductForm.values.Description}\r\n                                    onChange={AddProductForm.handleChange}\r\n                                    className=\"mb-4\"\r\n                                    rows=\"6\"\r\n                                />\r\n                            </Label>\r\n                            <FormTitle>Giá</FormTitle>\r\n                            <Label>\r\n                                <Input\r\n                                    id=\"Price\"\r\n                                    name=\"Price\"\r\n                                    value={AddProductForm.values.Price}\r\n                                    onChange={AddProductForm.handleChange}\r\n                                    type=\"number\"\r\n                                    className=\"mb-4 \"\r\n                                    placeholder=\"Nhập vào\"\r\n                                />\r\n                            </Label>\r\n\r\n                            <div className=\"w-full\">\r\n                                <Button type=\"submit\" size=\"large\" iconLeft={AddIcon}>\r\n                                    Thêm sản phẩm\r\n                                </Button>\r\n                            </div>\r\n                        </CardBody>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddProduct;\r\n","import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-4 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n","import React from \"react\";\r\n\r\nconst Icon = ({ icon, ...props }) => {\r\n  const Icon = icon;\r\n  return <Icon {...props} />;\r\n};\r\n\r\nexport default Icon;\r\n","function UploadImage(files,setImageURLs) {\r\n    const Upload = async (file) => {\r\n        const data = new FormData();\r\n        data.append('file', file);\r\n        data.append('upload_preset', '2clothy');\r\n        const res = await fetch('https://api.cloudinary.com/v1_1/sacchidananad-utech/image/upload', {\r\n            method: 'POST',\r\n            body: data,\r\n        });\r\n        const files = await res.json();\r\n        setImageURLs(prev=>{\r\n            return [...prev,files.secure_url]\r\n        })\r\n    };\r\n    for (let i = 0; i < files.length; i++) {\r\n        Upload(files[i]);\r\n    }\r\n\r\n}\r\n\r\nexport default UploadImage;\r\n"],"sourceRoot":""}