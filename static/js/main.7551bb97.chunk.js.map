{"version":3,"sources":["redux/selector.js","redux/AuthSlice.js","context/SidebarContext.js","components/ThemedSuspense.js","components/AccessibleNavigationAnnouncer.js","App.js","redux/store.js","index.js","windmillTheme.js"],"names":["authRemainingSelector","createSelector","state","auth","createSlice","name","initialState","login","currentUser","isFetching","error","register","success","reducers","loginStart","loginSuccess","action","payload","loginFailed","registerStart","registerSuccess","registerFailed","logOutSuccess","logOutFailed","logOutStart","SidebarContext","React","createContext","SidebarProvider","children","useState","isSidebarOpen","setIsSidebarOpen","toggleSidebar","closeSidebar","value","useMemo","Provider","ThemedSuspense","className","AccessibleNavigationAnnouncer","Layout","lazy","Login","CreateAccount","ForgotPassword","App","user","useSelector","console","log","exact","from","to","path","component","persistConfig","key","version","storage","rootReducer","combineReducers","AuthSlice","reducer","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","loading","fallback","usePreferences","theme","button","danger","base","active","disabled","primary","modal","modalBody","modalFooter","input","avatar","size","large","regular","small","document","getElementById"],"mappings":"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","file":"static/js/main.7551bb97.chunk.js","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\r\n\r\n\r\n\r\nexport const authListSelector = (state) => state.auth;\r\n\r\nexport const authRemainingSelector = createSelector(\r\n  authListSelector,\r\n\r\n  (auth) => {\r\n      return auth\r\n    });\r\n  // }\r\n// );","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport default createSlice({\r\n    name: 'auth',\r\n    initialState: {\r\n        login: {\r\n            currentUser: null,\r\n            isFetching: false,\r\n            error: false,\r\n        },\r\n        register: {\r\n            isFetching: false,\r\n            error: false,\r\n            success: false,\r\n        },\r\n\r\n    },\r\n    reducers: {\r\n        // IMMER\r\n        loginStart: (state) => {\r\n            state.login.isFetching = true;\r\n        },\r\n        loginSuccess: (state, action) => {\r\n            state.login.isFetching = false;\r\n            state.login.currentUser = action.payload;\r\n            state.login.error = false;\r\n        },\r\n        loginFailed: (state) => {\r\n            state.login.isFetching = false;\r\n            state.login.error = true;\r\n        },\r\n        registerStart: (state) => {\r\n            state.register.isFetching = true;\r\n        },\r\n        registerSuccess: (state) => {\r\n            state.register.isFetching = false;\r\n            state.register.error = false;\r\n            state.register.success = true;\r\n        },\r\n        registerFailed: (state) => {\r\n            state.register.isFetching = false;\r\n            state.register.error = true;\r\n            state.register.success = false;\r\n        },\r\n        logOutSuccess: (state) => {\r\n            state.login.isFetching = false;\r\n            state.login.currentUser = null;\r\n            state.login.error = false;\r\n        },\r\n        logOutFailed: (state) => {\r\n            state.login.isFetching = false;\r\n            state.login.error = true;\r\n        },\r\n        logOutStart: (state) => {\r\n            state.login.isFetching = true;\r\n        },\r\n        // action creators\r\n    },\r\n});\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\n// create context\r\nexport const SidebarContext = React.createContext();\r\n\r\nexport const SidebarProvider = ({ children }) => {\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n\r\n  function toggleSidebar() {\r\n    setIsSidebarOpen(!isSidebarOpen);\r\n  }\r\n\r\n  function closeSidebar() {\r\n    setIsSidebarOpen(false);\r\n  }\r\n\r\n  const value = useMemo(\r\n    () => ({\r\n      isSidebarOpen,\r\n      toggleSidebar,\r\n      closeSidebar,\r\n    }),\r\n    [isSidebarOpen]\r\n  );\r\n\r\n  return (\r\n    <SidebarContext.Provider value={value}>{children}</SidebarContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"../assets/css/loadingSpinner.css\";\r\n\r\nfunction ThemedSuspense() {\r\n  return (\r\n    <div className=\"w-full h-screen flex justify-center items-center p-6 text-lg font-medium text-gray-600 dark:text-gray-400 dark:bg-gray-900\">\r\n      <div className={`lds-ripple`}>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ThemedSuspense;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nfunction AccessibleNavigationAnnouncer() {\r\n  const [message, setMessage] = useState('')\r\n  const location = useLocation()\r\n\r\n  useEffect(() => {\r\n    // ignore the /\r\n    if (location.pathname.slice(1)) {\r\n      // make sure navigation has occurred and screen reader is ready\r\n      setTimeout(() => setMessage(`Navigated to ${location.pathname.slice(1)} page.`), 500)\r\n    } else {\r\n      setMessage('')\r\n    }\r\n  }, [location])\r\n\r\n  return (\r\n    <span className=\"sr-only\" role=\"status\" aria-live=\"polite\" aria-atomic=\"true\">\r\n      {message}\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default AccessibleNavigationAnnouncer\r\n","import React, { lazy } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport AccessibleNavigationAnnouncer from './components/AccessibleNavigationAnnouncer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authRemainingSelector } from './redux/selector';\r\n\r\nconst Layout = lazy(() => import('./containers/Layout'));\r\nconst Login = lazy(() => import('./pages/AuthPage/Login'));\r\nconst CreateAccount = lazy(() => import('./pages/AuthPage/CreateAccount'));\r\nconst ForgotPassword = lazy(() => import('./pages/AuthPage/ForgotPassword'));\r\n\r\nfunction App() {\r\n    const user = useSelector(authRemainingSelector);\r\n    const currentUser = user?.login.currentUser;\r\n  console.log(currentUser);\r\n\r\n    return (\r\n        <>\r\n            <Router>\r\n                <div className=\"App\">\r\n                    {/* <AccessibleNavigationAnnouncer /> */}\r\n                    <Switch>\r\n                        {currentUser ? <Redirect exact from=\"/\" to=\"/dashboard\" /> :''}\r\n                        <Route exact path=\"/\" component={Login} />\r\n                        {/* <Route path=\"/login\" component={Login} /> */}\r\n                        <Route exact path=\"/create-account\" component={CreateAccount} />\r\n                        <Route exact path=\"/forgot-password\" component={ForgotPassword} />\r\n\r\n                        {/* Place new routes over this */}\r\n                        <Route path=\"/\" component={Layout} />\r\n                        {/* If you have an index page, you can remothis Redirect */}\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// const intitState = {\r\n//     users: [\r\n//         { id: 1, name: 'John' },\r\n//         { id: 2, name: 'Johny' },\r\n//     ],\r\n// };\r\n\r\n// const rootReducer = (state = intitState, action) => {\r\n//     return state;\r\n// };\r\n\r\n// export default rootReducer\r\nimport { combineReducers, configureStore } from '@reduxjs/toolkit';\r\nimport AuthSlice from './AuthSlice';\r\n\r\n\r\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nconst persistConfig = {\r\n    key: 'root',\r\n    version: 1,\r\n    storage,\r\n};\r\n//bo nhung cai can giu nguyen khi f5\r\nconst rootReducer = combineReducers({ auth: AuthSlice.reducer });\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: (getDefaultMiddleware) =>\r\n      getDefaultMiddleware({\r\n        serializableCheck: {\r\n          ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n      }),\r\n});\r\n\r\nexport let persistor = persistStore(store);\r\n\r\n","import React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./assets/css/tailwind.output.css\";\r\nimport App from \"./App\";\r\nimport { SidebarProvider } from \"./context/SidebarContext\";\r\nimport ThemedSuspense from \"./components/ThemedSuspense\";\r\nimport { Windmill } from \"@windmill/react-ui\";\r\nimport windmillTheme from \"./windmillTheme\";\r\nimport { Provider } from 'react-redux';\r\nimport { persistor, store } from './redux/store';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <SidebarProvider>\r\n        <Suspense fallback={<ThemedSuspense />}>\r\n          <Windmill usePreferences theme={windmillTheme}>\r\n            <App />\r\n          </Windmill>\r\n        </Suspense>\r\n      </SidebarProvider>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","export default {\r\n  button: {\r\n    danger: {\r\n      base: \"text-white bg-red-600 border border-transparent\",\r\n      active:\r\n        \"active:bg-red-600 hover:bg-red-700 focus:ring focus:ring-red-300\",\r\n      disabled: \"opacity-50 cursor-not-allowed\",\r\n    },\r\n    primary: {\r\n      base: 'text-white bg-orange-400 border border-transparent',\r\n      active: 'active:bg-orange-400 hover:bg-orange-700 focus:ring focus:ring-orange-300',\r\n      disabled: 'opacity-50 cursor-not-allowed',\r\n    },\r\n  },\r\n  modal: {\r\n    base:\r\n      'w-full px-6 py-6 overflow-hidden bg-white rounded-t-lg dark:bg-gray-800 sm:rounded-lg sm:m-4 ',\r\n  },\r\n  modalBody: {\r\n    base: 'mb-6  max-h-96 text-sm text-gray-700 dark:text-gray-400',\r\n  },\r\n  modalFooter: {\r\n    base:\r\n      'flex justify-end flex-col items-center px-6 py-3 -mx-6 -mb-4 space-y-4 sm:space-y-0 sm:space-x-6 sm:flex-row bg-gray-50 dark:bg-gray-800',\r\n  },\r\n  input: {\r\n    \r\n    active:\r\n      'focus:border-orange-400 border-gray-300 dark:border-gray-600 focus:ring focus:ring-orange-300 dark:focus:border-gray-600 dark:focus:ring-gray-300 dark:bg-gray-700',\r\n    \r\n  },\r\n  avatar: {\r\n    base: 'relative rounded-md inline-block',\r\n    size: {\r\n      large: 'w-10 h-10',\r\n      regular: 'w-8 h-8',\r\n      small: 'w-6 h-6',\r\n    },\r\n  },\r\n  \r\n};\r\n"],"sourceRoot":""}