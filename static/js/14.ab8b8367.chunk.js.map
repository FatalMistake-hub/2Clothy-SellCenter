{"version":3,"sources":["pages/Profile/Profile.js","components/Typography/PageTitle.js","components/Icon.js","services/imageService.js"],"names":["FormTitle","children","className","Profile","useState","images","setImages","imageURLS","setImageURLs","bannerPathURLS","setBannerPathURLs","useEffect","length","newImageUrls","ShopForm","values","Pathbanner","forEach","image","push","path","URL","createObjectURL","isValidFileUploaded","file","fileExtension","type","split","includes","inputFile","useRef","inputFileLogo","imagesLogo","setImagesLogo","imageURLSLogo","setImageURLsLogo","setLogoPathURLs","console","log","dispatch","useDispatch","user","useSelector","authRemainingSelector","history","useHistory","currentUser","login","accessToken","errorResponse","setErrorResponse","setDataShop","a","apiService","shopId","dataShop","Name","name","Address","address","PhoneNumber","phoneNumber","Description","description","fetchApi","useFormik","initialValues","Paths","validationSchema","Yup","onSubmit","updateData","axiosJWT","createInstance","AuthSlice","actions","loginSuccess","updateShop","res","aria-hidden","icon","HomeIcon","exact","to","handleSubmit","id","value","onChange","handleChange","placeholder","onClick","current","click","e","files","target","UploadImage","isValidFileUploadedLogo","alert","ref","src","alt","rows","map","imageSrc","i","key","multiple","check","concat","data","viewBox","xmlns","d","size","iconLeft","AddIcon","PageTitle","Icon","props","Upload","FormData","append","fetch","method","body","json","prev","secure_url"],"mappings":"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","file":"static/js/14.ab8b8367.chunk.js","sourcesContent":["import React from 'react';\r\nimport PageTitle from '../../components/Typography/PageTitle';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport Icon from '../../components/Icon';\r\nimport { HomeIcon, AddIcon, PublishIcon, TrashIcon, RightArrow, StoreIcon } from '../../icons';\r\nimport { Card, CardBody, Label, Input, Textarea, Button, Select, Modal, ModalHeader, ModalBody, ModalFooter } from '@windmill/react-ui';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport * as apiService from '../../services/apiService';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport UploadImage from '../../services/imageService';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authRemainingSelector } from '../../redux/selector';\r\nimport { createInstance } from '../../services/createInstance';\r\nimport AuthSlice from '../../redux/AuthSlice';\r\nimport { addProduct, logOutUser, updateShop } from '../../services/authService';\r\nimport ErrorBox from '../../components/ErrorBox.js';\r\nconst FormTitle = ({ children }) => {\r\n    return <h2 className=\"mb-3 text-sm font-semibold text-gray-600 dark:text-gray-300\">{children}</h2>;\r\n};\r\nconst Profile = () => {\r\n    const [images, setImages] = useState([]);\r\n    const [imageURLS, setImageURLs] = useState([]);\r\n    const [bannerPathURLS, setBannerPathURLs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (images.length < 1) return;\r\n        const newImageUrls = [];\r\n        ShopForm.values.Pathbanner = images;\r\n\r\n        images.forEach((image) => {\r\n            newImageUrls.push({ path: `${URL.createObjectURL(image)}` });\r\n        });\r\n        setImageURLs(newImageUrls);\r\n    }, [images]);\r\n    const isValidFileUploaded = (file) => {\r\n        const validExtensions = ['png', 'jpeg', 'jpg'];\r\n        const fileExtension = file.type.split('/')[1];\r\n\r\n        return validExtensions.includes(fileExtension);\r\n    };\r\n    function onImageChange(e) {\r\n        const files = e.target.files;\r\n        UploadImage(files, setBannerPathURLs);\r\n\r\n        let check;\r\n        for (let i = 0; i < e.target.files.length; i++) {\r\n            if (isValidFileUploaded(files[i])) {\r\n                check = true;\r\n            } else {\r\n                check = false;\r\n                break;\r\n            }\r\n        }\r\n        if (files.length < 9 && check) {\r\n            if (images.concat([...e.target.files]).length <= 9) {\r\n                const data = images.concat([...e.target.files]);\r\n                setImages(data);\r\n            } else {\r\n                alert('Over the allowed file amount');\r\n            }\r\n        } else {\r\n            alert('File invalid');\r\n        }\r\n    }\r\n    const inputFile = useRef(null);\r\n    const onDivClick = () => {\r\n        inputFile.current.click();\r\n    };\r\n\r\n    //Logo\r\n    const inputFileLogo = useRef(null);\r\n    const onDivClickLogo = () => {\r\n        inputFileLogo.current.click();\r\n    };\r\n    const [imagesLogo, setImagesLogo] = useState('');\r\n    const [imageURLSLogo, setImageURLsLogo] = useState('https://cf.shopee.vn/file/72443418d390c42dd6342d7a010532d1');\r\n    const [logoPathURLS, setLogoPathURLs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (typeof imagesLogo !== 'string') {\r\n            console.log('set', imagesLogo[0]);\r\n            setImageURLsLogo(URL.createObjectURL(imagesLogo[0]));\r\n        }\r\n    }, [imagesLogo]);\r\n    const isValidFileUploadedLogo = (file) => {\r\n        const validExtensions = ['png', 'jpeg', 'jpg'];\r\n        const fileExtension = file.type.split('/')[1];\r\n        return validExtensions.includes(fileExtension);\r\n    };\r\n    function onImageLogoChange(e) {\r\n        const files = e.target.files;\r\n        UploadImage(files, setLogoPathURLs);\r\n\r\n        if (isValidFileUploadedLogo(files[0])) {\r\n            setImagesLogo(files);\r\n        } else {\r\n            alert('File invalid');\r\n        }\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(authRemainingSelector);\r\n    const history = useHistory();\r\n\r\n    const currentUser = user?.login.currentUser;\r\n    const accessToken = currentUser?.accessToken;\r\n    const [errorResponse, setErrorResponse] = useState('');\r\n\r\n    const [shop, setDataShop] = useState();\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            const dataShop = await apiService.detailShop(currentUser.shopId);\r\n            console.log(dataShop.images);\r\n            ShopForm.values.Name = dataShop.name;\r\n            ShopForm.values.Address = dataShop.address;\r\n            ShopForm.values.PhoneNumber = dataShop.phoneNumber;\r\n            setImageURLs(dataShop.images);\r\n            ShopForm.values.Description = dataShop.description;\r\n            setDataShop(dataShop);\r\n        };\r\n        fetchApi();\r\n    }, []);\r\n    const ShopForm = useFormik({\r\n        initialValues: {\r\n            Name: '',\r\n            Address: '',\r\n            PhoneNumber: '',\r\n            Paths: [],\r\n            Pathbanner: [],\r\n            Description: '',\r\n        },\r\n        validationSchema: Yup.object({}),\r\n        onSubmit: (values) => {\r\n            const updateData = {\r\n                Name: values.Name,\r\n                Address: values.Address,\r\n                PhoneNumber: values.PhoneNumber,\r\n                // Paths: logoPathURLS,\r\n                // Pathbanner: bannerPathURLS,\r\n                Paths: bannerPathURLS,\r\n                Description: values.Description,\r\n            };\r\n            const fetchApi = async () => {\r\n                let axiosJWT = createInstance(currentUser, dispatch, AuthSlice.actions.loginSuccess);\r\n                const res = await updateShop(updateData, history, accessToken, axiosJWT);\r\n                setErrorResponse(res);\r\n                console.log(res);\r\n            };\r\n            fetchApi();\r\n        },\r\n    });\r\n    return (\r\n        <div>\r\n            {/* Breadcum */}\r\n            <div className=\"flex  mt-8  text-gray-800 dark:text-gray-300\">\r\n                <div className=\"flex items-center text-orange-600\">\r\n                    <Icon className=\"w-5 h-5\" aria-hidden=\"true\" icon={HomeIcon} />\r\n                    <NavLink exact to=\"/dashboard\" className=\"mx-2\">\r\n                        Kênh người bán\r\n                    </NavLink>\r\n                </div>\r\n                {'>'}\r\n                <p className=\"mx-2\">Hồ Sơ Shop</p>\r\n            </div>\r\n\r\n            <div className=\"w-full mt-8 grid gap-4 grid-col  \">\r\n                <Card className=\"row-span-4 md:col-span-4 \">\r\n                    <div className=\"ml-8 mb-4\">\r\n                        <PageTitle>Hồ Sơ Shop</PageTitle>\r\n                        <FormTitle>Xem tình trạng Shop và cập nhật hồ sơ Shop của bạn</FormTitle>\r\n                    </div>\r\n                    <form onSubmit={ShopForm.handleSubmit}>\r\n                        <CardBody className=\"w-4/5 mx-auto\">\r\n                            <FormTitle>Tên shop</FormTitle>\r\n                            <Label>\r\n                                <Input\r\n                                    id=\"Name\"\r\n                                    name=\"Name\"\r\n                                    value={ShopForm.values.Name}\r\n                                    onChange={ShopForm.handleChange}\r\n                                    className=\"mb-4\"\r\n                                    placeholder=\"Tên shop\"\r\n                                />\r\n                            </Label>\r\n                            <FormTitle>Số điện thoại</FormTitle>\r\n                            <Label>\r\n                                <Input\r\n                                    id=\"PhoneNumber\"\r\n                                    name=\"PhoneNumber\"\r\n                                    value={ShopForm.values.PhoneNumber}\r\n                                    onChange={ShopForm.handleChange}\r\n                                    className=\"mb-4\"\r\n                                    placeholder=\"Nhập số điện thoại\"\r\n                                    type=\"number\"\r\n                                />\r\n                            </Label>\r\n                            <FormTitle>Shop logo</FormTitle>\r\n\r\n                            <div className=\"w-32 h-32 relative  rounded mr-4 mb-4  text-center  flex\" onClick={onDivClickLogo}>\r\n                                <div className=\"w-full h-full   flex items-center\">\r\n                                    <input\r\n                                        id=\"Paths\"\r\n                                        name=\"Paths\"\r\n                                        type=\"file\"\r\n                                        className=\"hidden\"\r\n                                        onChange={onImageLogoChange}\r\n                                        ref={inputFileLogo}\r\n                                    />\r\n                                    <img src={imageURLSLogo} alt=\"\" className=\"rounded\" />\r\n                                </div>\r\n                                <div className=\" rounded-b absolute bottom-0 w-full h-6 text-medium leading-6 bg-gray-700 opacity-75 hover:bg-gray-500 text-white text-center cursor-pointer\">\r\n                                    Sửa\r\n                                </div>\r\n                            </div>\r\n                            <FormTitle>Địa chỉ</FormTitle>\r\n                            <Label>\r\n                                <Textarea\r\n                                    id=\"Address\"\r\n                                    name=\"Address\"\r\n                                    value={ShopForm.values.Address}\r\n                                    onChange={ShopForm.handleChange}\r\n                                    className=\"mb-4\"\r\n                                    rows=\"3\"\r\n                                    placeholder=\"Nhập thông tin địa chỉ của shop bạn vào đây\"\r\n                                />\r\n                            </Label>\r\n                            <FormTitle>Banner shop</FormTitle>\r\n\r\n                            <div className=\"w-full flex flex-wrap\">\r\n                                {imageURLS.map((imageSrc, i) => (\r\n                                    <div key={i} className=\"w-96 h-40 rounded mr-4 mb-4\">\r\n                                        <div className=\"w-full h-full \">\r\n                                            <img src={imageSrc.path} alt=\"not fount\" className=\"w-full h-full rounded border \" />\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n\r\n                                <div className=\"w-20 h-20 rounded mr-4 mb-4  text-center  flex\">\r\n                                    <div\r\n                                        onClick={onDivClick}\r\n                                        className=\"w-full h-full rounded border border-dashed border-slate-600 flex items-center hover:bg-orange-100\"\r\n                                    >\r\n                                        <input\r\n                                            id=\"Pathbanner\"\r\n                                            name=\"Pathbanner\"\r\n                                            type=\"file\"\r\n                                            multiple={true}\r\n                                            className=\"hidden\"\r\n                                            onChange={onImageChange}\r\n                                            ref={inputFile}\r\n                                        />\r\n                                        <div className=\"flex text-orange-600 flex-col   \">\r\n                                            <div className=\"h-6\">\r\n                                                <i className=\"w-6 h-6 inline-block fill-current\">\r\n                                                    <svg viewBox=\"0 0 23 21\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                        <path d=\"M18.5 0A1.5 1.5 0 0 1 20 1.5V12c-.49-.07-1.01-.07-1.5 0V1.5H2v12.65l3.395-3.408a.75.75 0 0 1 .958-.087l.104.087L7.89 12.18l3.687-5.21a.75.75 0 0 1 .96-.086l.103.087 3.391 3.405c.81.813.433 2.28-.398 3.07A5.235 5.235 0 0 0 14.053 18H2a1.5 1.5 0 0 1-1.5-1.5v-15A1.5 1.5 0 0 1 2 0h16.5z\"></path>\r\n                                                        <path d=\"M6.5 4.5a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3zM18.5 14.25a.75.75 0 0 1 1.5 0v2.25h2.25a.75.75 0 0 1 0 1.5H20v2.25a.75.75 0 0 1-1.5 0V18h-2.25a.75.75 0 0 1 0-1.5h2.25v-2.25z\"></path>\r\n                                                    </svg>\r\n                                                </i>\r\n                                            </div>\r\n                                            <div className=\"leading-3 text-xs\">Thêm hình ảnh ({imageURLS.length}/9)</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <FormTitle>Mô tả shop</FormTitle>\r\n                            <Label>\r\n                                <Textarea\r\n                                    id=\"Description\"\r\n                                    name=\"Description\"\r\n                                    value={ShopForm.values.Description}\r\n                                    onChange={ShopForm.handleChange}\r\n                                    className=\"mb-4\"\r\n                                    rows=\"6\"\r\n                                    placeholder=\"Nhập mô tả hoặc thông tin của shop bạn vào đây\"\r\n                                />\r\n                            </Label>\r\n                            {errorResponse ? <div className=\"\">\r\n                    <div className=\"w-full bg-green-200 text-white rounded-md p-4 my-6\">\r\n                        <p className=\"font-bold text-base leading-5 bg-transparent text-black\">{errorResponse}</p>\r\n                    </div>\r\n                </div> : ''}\r\n                            <div className=\"w-full\">\r\n                                <Button type=\"submit\" size=\"large\" iconLeft={AddIcon}>\r\n                                    Lưu\r\n                                </Button>\r\n                            </div>\r\n\r\n                        </CardBody>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-4 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n","import React from \"react\";\r\n\r\nconst Icon = ({ icon, ...props }) => {\r\n  const Icon = icon;\r\n  return <Icon {...props} />;\r\n};\r\n\r\nexport default Icon;\r\n","function UploadImage(files,setImageURLs) {\r\n    const Upload = async (file) => {\r\n        const data = new FormData();\r\n        data.append('file', file);\r\n        data.append('upload_preset', '2clothy');\r\n        const res = await fetch('https://api.cloudinary.com/v1_1/sacchidananad-utech/image/upload', {\r\n            method: 'POST',\r\n            body: data,\r\n        });\r\n        const files = await res.json();\r\n        setImageURLs(prev=>{\r\n            return [...prev,files.secure_url]\r\n        })\r\n    };\r\n    for (let i = 0; i < files.length; i++) {\r\n        Upload(files[i]);\r\n    }\r\n\r\n}\r\n\r\nexport default UploadImage;\r\n"],"sourceRoot":""}