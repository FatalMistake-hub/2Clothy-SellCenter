{"version":3,"sources":["pages/Order/Orders.js","components/Typography/PageTitle.js","components/ProductIcon.js","../node_modules/webpack/buildin/module.js","components/OrdersTable.js"],"names":["Icon","icon","props","Orders","useState","resultsPerPage","filter","setFilter","handleFilter","filter_name","className","aria-hidden","HomeIcon","exact","to","onChange","e","target","value","path","PageTitle","children","ProductIcon","src","alt","size","loading","module","exports","webpackPolyfill","deprecate","paths","Object","defineProperty","enumerable","get","l","i","OrdersTable","page","setPage","data","setData","response","setResponse","dispatch","useDispatch","user","useSelector","authRemainingSelector","currentUser","login","accessToken","useEffect","a","axiosJWT","createInstance","AuthSlice","actions","loginSuccess","apiAuthService","result","fetchApi","slice","order","statusId","handleOrder","purchaseId","status","StatusId","map","key","billId","orderDetails","itemImg","itemName","quantity","reduce","total","price","toLocaleString","type","statusName","moment","dateCreated","format","id","aria-label","onClick","handleStatus","splice","length","totalResults","label","p"],"mappings":"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","file":"static/js/20.7167281e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PageTitle from '../../components/Typography/PageTitle';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { HomeIcon } from '../../icons';\r\nimport { Card, CardBody, Label, Select } from '@windmill/react-ui';\r\nimport OrdersTable from '../../components/OrdersTable';\r\n\r\nfunction Icon({ icon, ...props }) {\r\n    const Icon = icon;\r\n    return <Icon {...props} />;\r\n}\r\n\r\nconst Orders = () => {\r\n    // pagination setup\r\n    const [resultsPerPage, setResultPerPage] = useState(5);\r\n    const [filter, setFilter] = useState('Tất cả');\r\n\r\n    const handleFilter = (filter_name) => {\r\n        // console.log(filter_name);\r\n        if (filter_name === 'Tất cả') {\r\n            setFilter('Tất cả');\r\n        }\r\n        if (filter_name === 'Chờ xác nhận') {\r\n            setFilter('Chờ xác nhận');\r\n        }\r\n        if (filter_name === 'Đang giao') {\r\n            setFilter('Đang giao');\r\n        }\r\n        if (filter_name === 'Đã giao') {\r\n            setFilter('Đã giao');\r\n        }\r\n        if (filter_name === 'Đã huỷ') {\r\n            setFilter('Đã huỷ');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <PageTitle>Đơn hàng</PageTitle>\r\n\r\n            {/* Breadcum */}\r\n            <div className=\"flex text-gray-800 dark:text-gray-300\">\r\n                <div className=\"flex items-center text-orange-600\">\r\n                    <Icon className=\"w-5 h-5\" aria-hidden=\"true\" icon={HomeIcon} />\r\n                    <NavLink exact to=\"/dashboard\" className=\"mx-2\">\r\n                        Kênh người bán\r\n                    </NavLink>\r\n                </div>\r\n                {'>'}\r\n                <p className=\"mx-2\">Đơn hàng</p>\r\n            </div>\r\n\r\n            {/* Sort */}\r\n            <Card className=\"mt-5 mb-5 shadow-md\">\r\n                <CardBody>\r\n                    <div className=\"flex items-center \">\r\n                        <Label className=\"mx-3 flex items-center \">\r\n                            <p className=\"text-sm w-full  text-gray-600 dark:text-gray-400\">Lọc đơn hàng</p>\r\n                            <Select className=\"py-3\" onChange={(e) => handleFilter(e.target.value)}>\r\n                                <option>Tất cả</option>\r\n                                <option>Chờ xác nhận</option>\r\n                                <option>Đang giao</option>\r\n                                <option>Đã giao</option>\r\n                                <option>Đã huỷ</option>\r\n                            </Select>\r\n                        </Label>\r\n\r\n                        <Label className=\"mx-3 flex items-center\">\r\n                            {/* <!-- focus-within sets the color for the icon when input is focused --> */}\r\n                            <p className=\"text-sm w-full text-gray-600 dark:text-gray-400\">Ngày đặt hàng</p>\r\n                            <Select className=\"py-3\" onChange={(e) => handleFilter(e.target.value)}>\r\n                                <option>Tất cả</option>\r\n                                <option>Chưa thanh toán</option>\r\n                                <option>Đã thanh toán</option>\r\n                                <option>Hoàn thành</option>\r\n                            </Select>\r\n                            {/* <div className=\"relative text-gray-500 focus-within:text-orange-600 dark:focus-within:text-orange-400\">\r\n                                <input\r\n                                    className=\"py-3 pr-5 text-sm text-black dark:text-gray-300 dark:border-gray-600 dark:bg-gray-700 focus:border-orange-400 focus:outline-none focus:shadow-outline-orange dark:focus:shadow-outline-gray form-input\"\r\n                                    value={resultsPerPage}\r\n                                    onChange={(e) => setResultPerPage(e.target.value)}\r\n                                />\r\n                                <div className=\"absolute inset-y-0 right-0 flex items-center mr-3 pointer-events-none\"> */}\r\n                            {/* <SearchIcon className=\"w-5 h-5\" aria-hidden=\"true\" /> */}\r\n                            {/* Results on Table */}\r\n                            {/* </div>\r\n                            </div> */}\r\n                        </Label>\r\n                    </div>\r\n                </CardBody>\r\n            </Card>\r\n\r\n            {/* Table */}\r\n            <OrdersTable resultsPerPage={resultsPerPage} filter={filter} path={'orders'} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Orders;\r\n","import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-4 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nfunction ProductIcon({ src, alt ,size='w-20 h-20'}) {\r\n    \r\n    return (\r\n        <>\r\n            <div className={`relative rounded-md inline-block ${size} hidden mr-4 md:block`}>\r\n                <img className=\"object-cover w-full h-full rounded-md\" src={src} alt={alt} loading=\"lazy\" />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductIcon;\r\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    TableBody,\r\n    TableContainer,\r\n    Table,\r\n    TableHeader,\r\n    TableCell,\r\n    TableRow,\r\n    TableFooter,\r\n    Button,\r\n    Avatar,\r\n    Badge,\r\n    Pagination,\r\n} from '@windmill/react-ui';\r\nimport { EyeIcon } from '../icons';\r\nimport ordersData from '../utils/demo/ordersData';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport ProductIcon from './ProductIcon';\r\nimport * as apiAuthService from '../services/authService';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authRemainingSelector } from '../redux/selector';\r\nimport { createInstance } from '../services/createInstance';\r\nimport moment from 'moment/moment';\r\nimport AuthSlice from '../redux/AuthSlice';\r\nconst OrdersTable = ({ resultsPerPage, filter, path }) => {\r\n    const [page, setPage] = useState(1);\r\n    const [data, setData] = useState([]);\r\n    const [response, setResponse] = useState([]);\r\n    // pagination setup\r\n\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(authRemainingSelector);\r\n    const currentUser = user?.login.currentUser;\r\n    const accessToken = currentUser?.accessToken;\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            let axiosJWT = createInstance(currentUser, dispatch, AuthSlice.actions.loginSuccess);\r\n            const result = await apiAuthService.getShopOrder(accessToken, axiosJWT);\r\n            setResponse(result);\r\n            \r\n        };\r\n        fetchApi();\r\n    }, []);\r\n\r\n    // pagination change control\r\n    function onPageChange(p) {\r\n        setPage(p);\r\n    }\r\n\r\n    // on page change, load new sliced data\r\n    // here you would make another server request for new data\r\n    useEffect(() => {\r\n        if (filter === 'Tất cả' || !filter) {\r\n            setData(response?.slice((page - 1) * resultsPerPage, page * resultsPerPage));\r\n        }\r\n        if (filter === 'Chờ xác nhận') {\r\n            setData(response?.filter((order) => order.statusId === 1).slice((page - 1) * resultsPerPage, page * resultsPerPage));\r\n        }\r\n        if (filter === 'Đang giao') {\r\n            setData(response?.filter((order) => order.statusId === 2).slice((page - 1) * resultsPerPage, page * resultsPerPage));\r\n        }\r\n        if (filter === 'Đã giao') {\r\n            setData(response?.filter((order) => order.statusId === 3).slice((page - 1) * resultsPerPage, page * resultsPerPage));\r\n        }\r\n        if (filter === 'Đã huỷ') {\r\n            setData(response?.filter((order) => order.statusId === 4).slice((page - 1) * resultsPerPage, page * resultsPerPage));\r\n        }\r\n    }, [page, resultsPerPage, filter,response]);\r\n\r\n    const handleStatus = (status, id) => {\r\n        switch (status) {\r\n            case 1:\r\n                return (\r\n                    <>\r\n                        <span\r\n                            onClick={() => handleOrder(id, 2)}\r\n                            className=\"my-2 font-medium cursor-pointer leading-3 text-blue-500 hover:text-blue-700\"\r\n                            aria-label=\"Preview\"\r\n                        >\r\n                            Xác nhận\r\n                        </span>\r\n                        <span\r\n                            onClick={() => handleOrder(id, 4)}\r\n                            className=\"my-2 font-medium cursor-pointer leading-3 text-blue-500 hover:text-blue-700\"\r\n                            aria-label=\"Preview\"\r\n                        >\r\n                            Huỷ\r\n                        </span>\r\n                    </>\r\n                );\r\n            // case 2:\r\n            //     return (\r\n            //         <span\r\n            //             onClick={() => handleOrder(id, 4)}\r\n            //             className=\"my-2 font-medium cursor-pointer leading-3 text-blue-500 hover:text-blue-700\"\r\n            //             aria-label=\"Preview\"\r\n            //         >\r\n            //             Huỷ\r\n            //         </span>\r\n            //     );\r\n            default:\r\n                return '';\r\n        }\r\n    };\r\n    const handleOrder = (purchaseId, status) => {\r\n        const fetchApi = async () => {\r\n            let axiosJWT = createInstance(currentUser, dispatch, AuthSlice.actions.loginSuccess);\r\n            let result;\r\n            if (status == 2) {\r\n                result = await apiAuthService.updateOrder(\r\n                    purchaseId,\r\n                    {\r\n                        StatusId: status,\r\n                    },\r\n                    accessToken,\r\n                    axiosJWT,\r\n                );\r\n                setResponse(result);\r\n                \r\n\r\n                // setFilterPurchases(result);\r\n            } else {\r\n                result = await apiAuthService.cancelOrder(purchaseId, accessToken, axiosJWT);\r\n                setResponse(result);\r\n                \r\n\r\n                // setFilterPurchases(result);\r\n            }\r\n        };\r\n        fetchApi();\r\n    };\r\n    return (\r\n        <div>\r\n            {/* Table */}\r\n            <TableContainer className=\"mb-8\">\r\n                <Table>\r\n                    <TableHeader>\r\n                        <tr>\r\n                            <TableCell>Sản phẩm</TableCell>\r\n                            <TableCell>Số lượng</TableCell>\r\n                            <TableCell>Tổng Đơn hàng</TableCell>\r\n                            <TableCell>Trạng thái </TableCell>\r\n                            <TableCell>Ngày đặt đơn</TableCell>\r\n                            <TableCell>Thao tác</TableCell>\r\n                        </tr>\r\n                    </TableHeader>\r\n                    <TableBody>\r\n                        {data?.map((order, i) => (\r\n                            <>\r\n                                <TableRow key={i} className=\"mb-4\">\r\n                                    <TableCell>\r\n                                        {/* <TableHeader> */}\r\n                                        <div className=\"flex flex-end p-4\"> Mã đơn hàng: {order.billId} </div>\r\n                                        {/* </TableHeader> */}\r\n                                        <div className=\"flex items-center text-sm\">\r\n                                            <ProductIcon\r\n                                                className=\"hidden mr-3 md:block\"\r\n                                                src={order.orderDetails[0]?.itemImg}\r\n                                                alt=\"User image\"\r\n                                            />\r\n                                            <div>\r\n                                                <p className=\"font-semibold\">{order.orderDetails[0]?.itemName}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </TableCell>\r\n\r\n                                    <TableCell>\r\n                                        <span className=\"text-sm\">X {order.orderDetails[0]?.quantity}</span>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <span className=\"text-sm\">\r\n                                            {order.orderDetails\r\n                                                .reduce(function (total, order) {\r\n                                                    return total + order.price;\r\n                                                }, 0)\r\n                                                .toLocaleString('es-ES')}{' '}\r\n                                            ₫\r\n                                        </span>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Badge\r\n                                            type={\r\n                                                order.statusId === 4\r\n                                                    ? 'danger'\r\n                                                    : order.statusId === 3\r\n                                                    ? 'success'\r\n                                                    : order.statusId === 1\r\n                                                    ? 'warning'\r\n                                                :\"primary\"\r\n                                            }\r\n                                        >\r\n                                            {order.statusName}\r\n                                        </Badge>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <span className=\"text-sm\">{moment(data.dateCreated).format('L')}</span>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <div className=\"flex flex-col  justify-between\">\r\n                                            <Link to={`/orders/${order.id}`}>\r\n                                                <span\r\n                                                    className=\"my-2 font-medium leading-3 text-blue-500 hover:text-blue-700\"\r\n                                                    aria-label=\"Preview\"\r\n                                                >\r\n                                                    Xem chi tiết\r\n                                                </span>\r\n                                            </Link>\r\n                                            {handleStatus(order.statusId, order.id)}\r\n                                        </div>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                {order.orderDetails.splice(1,order.orderDetails.length).map((orderDetails, i) => (\r\n                                    <TableRow key={i}>\r\n                                        <TableCell>\r\n                                            <div className=\"flex items-center text-sm\">\r\n                                                <ProductIcon className=\"hidden mr-3 md:block\" src={orderDetails.itemImg} alt=\"User image\" />\r\n                                                <div>\r\n                                                    <p className=\"font-semibold\">{orderDetails.itemName}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </TableCell>\r\n                                        <TableCell>X {orderDetails.quantity}</TableCell>\r\n                                        <TableCell>\r\n                                            {/* <span className=\"text-sm\">{orderDetails.price.toLocaleString('es-ES')} ₫</span> */}\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            {/* <Badge\r\n                                                type={\r\n                                                    orderDetails.status === 'Un-paid'\r\n                                                        ? 'danger'\r\n                                                        : orderDetails.status === 'Paid'\r\n                                                        ? 'success'\r\n                                                        : orderDetails.status === 'Completed'\r\n                                                        ? 'warning'\r\n                                                        : 'neutral'\r\n                                                }\r\n                                            >\r\n                                                {orderDetails.status}\r\n                                            </Badge> */}\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            {/* <span className=\"text-sm\">{moment(data.dateCreated).format('MMMM Do YYYY')}</span> */}\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            {/* <div className=\"flex flex-col  justify-between\">\r\n                                                <Link to={`/ordersDetail`}>\r\n                                                    <span\r\n                                                        className=\"my-2 font-medium leading-3 text-blue-500 hover:text-blue-700\"\r\n                                                        aria-label=\"Preview\"\r\n                                                    >\r\n                                                        Xem chi tiết\r\n                                                    </span>\r\n                                                </Link>\r\n                                                {handleStatus(data.statusId)}\r\n                                                <span icon={EyeIcon} className=\"my-2\" aria-label=\"Preview\">Đang giao</span>\r\n                                            </div> */}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </>\r\n                        ))}\r\n                    </TableBody>\r\n                    <TableFooter>\r\n                        <Pagination\r\n                            totalResults={response?.length}\r\n                            resultsPerPage={resultsPerPage}\r\n                            label=\"Table navigation\"\r\n                            onChange={onPageChange}\r\n                        />\r\n                    </TableFooter>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrdersTable;\r\n"],"sourceRoot":""}